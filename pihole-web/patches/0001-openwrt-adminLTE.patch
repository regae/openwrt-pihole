Only in b: .DS_Store
--- a/api.php
+++ b/api.php
@@ -11,6 +11,7 @@
 require_once("scripts/pi-hole/php/password.php");
 require_once("scripts/pi-hole/php/database.php");
 require_once("scripts/pi-hole/php/auth.php");
+require_once("scripts/pi-hole/php/update_checker.php");
 check_cors();
 
 $data = array();
@@ -27,11 +28,14 @@
 		// Skip token validation if explicit auth string is given
 		check_csrf($_GET['token']);
 	}
-	pihole_execute('enable');
+	uci_set("pihole", "@pihole[0]", "blocking_enabled", 1);
+	if(uci_commit("pihole")) {
+		send_signal_FTL(35);
+	}
 	$data = array_merge($data, array("status" => "enabled"));
-	if (file_exists("../custom_disable_timer"))
+	if (file_exists("/var/lib/pihole/custom_disable_timer"))
 	{
-		unlink("../custom_disable_timer");
+		unlink("/var/lib/pihole/custom_disable_timer");
 	}
 }
 elseif (isset($_GET['disable']) && $auth)
@@ -52,40 +56,31 @@
 	{
 		$timestamp = time();
 		pihole_execute("disable ".$disable."s");
-		file_put_contents("../custom_disable_timer",($timestamp+$disable)*1000);
+		file_put_contents("/var/lib/pihole/custom_disable_timer",($timestamp+$disable)*1000);
 	}
 	else
 	{
-		pihole_execute('disable');
-		if (file_exists("../custom_disable_timer"))
+		uci_set("pihole", "@pihole[0]", "blocking_enabled", 0);
+		if(uci_commit("pihole")) {
+			send_signal_FTL(35);
+		}
+		if (file_exists("/var/lib/pihole/custom_disable_timer"))
 		{
-			unlink("../custom_disable_timer");
+			unlink("/var/lib/pihole/custom_disable_timer");
 		}
 	}
+
 	$data = array_merge($data, array("status" => "disabled"));
 }
 elseif (isset($_GET['versions']))
 {
-	// Determine if updates are available for Pi-hole
-	// using the same script that we use for the footer
-	// on the dashboard (update notifications are
-	// suppressed if on development branches)
-	require "scripts/pi-hole/php/update_checker.php";
-	$updates = array("core_update" => $core_update,
-	                 "web_update" => $web_update,
-	                 "FTL_update" => $FTL_update);
 	$current = array("core_current" => $core_current,
 	                 "web_current" => $web_current,
 	                 "FTL_current" => $FTL_current);
-	$latest = array("core_latest" => $core_latest,
-	                "web_latest" => $web_latest,
-	                "FTL_latest" => $FTL_latest);
-	$branches = array("core_branch" => $core_branch,
-	                  "web_branch" => $web_branch,
-	                  "FTL_branch" => $FTL_branch);
-	$data = array_merge($data, $updates);
+	$branches = array("core_branch" => "openwrt",
+	                  "web_branch" => "openwrt",
+	                  "FTL_branch" => "openwrt");
 	$data = array_merge($data, $current);
-	$data = array_merge($data, $latest);
 	$data = array_merge($data, $branches);
 }
 elseif (isset($_GET['list']))
--- a/api_db.php
+++ b/api_db.php
@@ -294,7 +294,15 @@
 
 if (isset($_GET['getDBfilesize']) && $auth)
 {
-	$filesize = filesize("/etc/pihole/pihole-FTL.db");
+	$DBF = uci_get("pihole", "@pihole[0]", "dbfile");
+	if(isset($DBF))
+	{
+		$filesize = filesize($DBF);
+	}
+	else
+	{
+		$filesize = filesize("/etc/pihole/pihole-FTL.db");
+	}
 	$result = array('filesize' => $filesize);
 	$data = array_merge($data, $result);
 }
--- a/cname_records.php
+++ b/cname_records.php
@@ -44,6 +44,7 @@
               <p>The reason for this is that Pi-hole will not send additional queries upstream when serving <code>CNAME</code> replies. As consequence, if you set a target that isn't already known, the reply to the client may be incomplete. Pi-hole just returns the information it knows at the time of the query. This results in certain limitations for <code>CNAME</code> targets,
                 for instance, only <i>active</i> DHCP leases work as targets - mere DHCP <i>leases</i> aren't sufficient as they aren't (yet) valid DNS records.</p>
                 <p>Additionally, you can't <code>CNAME</code> external domains (<code>bing.com</code> to <code>google.com</code>) successfully as this could result in invalid SSL certificate errors when the target server does not serve content for the requested domain.</p>
+                <p>*<code>Use apply button to apply changes.</code></p>
                 <button type="button" id="btnAdd" class="btn btn-primary pull-right">Add</button>
             </div>
         </div>
@@ -67,6 +68,10 @@
     <button type="button" class="close" data-hide="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
     At least one domain was already present, see output below:<br/><br/><pre><span id="warn"></span></pre>
 </div>
+<div id="alApply" class="alert alert-success alert-dismissible fade in" role="alert" hidden>
+    <button type="button" class="close" data-hide="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
+    <span id="apply"></span>
+</div>
 <div class="row">
     <div class="col-md-12">
         <div class="box" id="recent-queries">
@@ -91,6 +96,7 @@
             <!-- /.box-body -->
         </div>
         <!-- /.box -->
+		<button type="button" class="btn btn-primary pull-right" id="btnApply">Apply</button>
     </div>
 </div>
 
--- a/dns_records.php
+++ b/dns_records.php
@@ -45,9 +45,10 @@
                   <li>The device's host name and <code>pi.hole</code></li>
                   <li>Configured in a config file in <code>/etc/dnsmasq.d/</code></li>
                   <li>Read from <code>/etc/hosts</code></li>
-                  <li>Read from the "Local (custom) DNS" list (stored in <code>/etc/pihole/custom.list</code>)</li>
+                  <li>Read from uci dhcp domain list (stored in <code>/etc/config/dhcp</code>)</li>
               </ol>
               <p>Only the first record will trigger an address-to-name association.</p>
+              <p>*<code>Use apply button to apply changes.</code></p>
                 <button type="button" id="btnAdd" class="btn btn-primary pull-right">Add</button>
             </div>
         </div>
@@ -71,6 +72,10 @@
     <button type="button" class="close" data-hide="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
     At least one domain was already present, see output below:<br/><br/><pre><span id="warn"></span></pre>
 </div>
+<div id="alApply" class="alert alert-success alert-dismissible fade in" role="alert" hidden>
+    <button type="button" class="close" data-hide="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
+    <span id="apply"></span>
+</div>
 <div class="row">
     <div class="col-md-12">
         <div class="box" id="recent-queries">
@@ -95,6 +100,7 @@
             <!-- /.box-body -->
         </div>
         <!-- /.box -->
+		<button type="button" class="btn btn-primary pull-right" id="btnApply">Apply</button>
     </div>
 </div>
 
--- a/messages.php
+++ b/messages.php
@@ -36,7 +36,6 @@
                     </tr>
                     </thead>
                 </table>
-                <p>Note: If errors are shown, you can <a href="debug.php">generate a debug log</a>, which will do a thorough Pi-hole evaluation.</p>
             </div>
             <!-- /.box-body -->
         </div>
--- a/queries.php
+++ b/queries.php
@@ -8,22 +8,23 @@
     require "scripts/pi-hole/php/header.php";
 
 $showing = "";
+$api_query = uci_get("pihole", "@pihole[0]", "api_query_log_show");
 
-if(isset($setupVars["API_QUERY_LOG_SHOW"]))
+if(isset($api_query))
 {
-	if($setupVars["API_QUERY_LOG_SHOW"] === "all")
+	if($api_query === "all")
 	{
 		$showing = "showing";
 	}
-	elseif($setupVars["API_QUERY_LOG_SHOW"] === "permittedonly")
+	elseif($api_query === "permittedonly")
 	{
 		$showing = "showing permitted";
 	}
-	elseif($setupVars["API_QUERY_LOG_SHOW"] === "blockedonly")
+	elseif($api_query === "blockedonly")
 	{
 		$showing = "showing blocked";
 	}
-	elseif($setupVars["API_QUERY_LOG_SHOW"] === "nothing")
+	elseif($api_query === "nothing")
 	{
 		$showing = "showing no queries (due to setting)";
 	}
Only in b/scripts: .DS_Store
Only in b/scripts/pi-hole: .DS_Store
--- a/scripts/pi-hole/js/customcname.js
+++ b/scripts/pi-hole/js/customcname.js
@@ -21,6 +21,10 @@
     case "success":
       alertElement = $("#alSuccess");
       break;
+    case "apply":
+      alertElement = $("#alApply");
+      messageElement = $("#apply");
+      break;
     case "warning":
       alertElement = $("#alWarning");
       messageElement = $("#warn");
@@ -41,6 +45,7 @@
 
 $(function () {
   $("#btnAdd").on("click", addCustomCNAME);
+  $("#btnApply").on("click", applyCustomCNAME);
 
   table = $("#customCNAMETable").DataTable({
     ajax: {
@@ -95,6 +100,24 @@
   input.setAttribute("spellcheck", false);
 });
 
+function applyCustomCNAME() {
+  $.ajax({
+    url: "scripts/pi-hole/php/customdns.php",
+    method: "post",
+    dataType: "json",
+    data: { action: "apply", token: token },
+    success: function (response) {
+      if (response.success) {
+        showAlert("apply", response.message);
+        table.ajax.reload();
+      } else showAlert("error", response.message);
+    },
+    error: function () {
+      showAlert("error", "Error while restarting FTL");
+    },
+  });
+}
+
 function addCustomCNAME() {
   var domain = utils.escapeHtml($("#domain").val());
   var target = utils.escapeHtml($("#target").val());
@@ -107,7 +130,6 @@
     data: { action: "add", domain: domain, target: target, token: token },
     success: function (response) {
       if (response.success) {
-        showAlert("success");
         table.ajax.reload();
       } else showAlert("error", response.message);
     },
@@ -129,7 +151,6 @@
     data: { action: "delete", domain: domain, target: target, token: token },
     success: function (response) {
       if (response.success) {
-        showAlert("success");
         table.ajax.reload();
       } else showAlert("error", response.message);
     },
--- a/scripts/pi-hole/js/customdns.js
+++ b/scripts/pi-hole/js/customdns.js
@@ -21,6 +21,10 @@
     case "success":
       alertElement = $("#alSuccess");
       break;
+    case "apply":
+      alertElement = $("#alApply");
+      messageElement = $("#apply");
+      break;
     case "warning":
       alertElement = $("#alWarning");
       messageElement = $("#warn");
@@ -41,6 +45,7 @@
 
 $(function () {
   $("#btnAdd").on("click", addCustomDNS);
+  $("#btnApply").on("click", applyCustomDNS);
 
   table = $("#customDNSTable").DataTable({
     ajax: {
@@ -94,6 +99,24 @@
   input.setAttribute("spellcheck", false);
 });
 
+function applyCustomDNS() {
+  $.ajax({
+    url: "scripts/pi-hole/php/customdns.php",
+    method: "post",
+    dataType: "json",
+    data: { action: "apply", token: token },
+    success: function (response) {
+      if (response.success) {
+        showAlert("apply", response.message);
+        table.ajax.reload();
+      } else showAlert("error", response.message);
+    },
+    error: function () {
+      showAlert("error", "Error while restarting FTL");
+    },
+  });
+}
+
 function addCustomDNS() {
   var ip = utils.escapeHtml($("#ip").val());
   var domain = utils.escapeHtml($("#domain").val());
@@ -106,7 +129,6 @@
     data: { action: "add", ip: ip, domain: domain, token: token },
     success: function (response) {
       if (response.success) {
-        showAlert("success");
         table.ajax.reload();
       } else showAlert("error", response.message);
     },
@@ -128,7 +150,6 @@
     data: { action: "delete", domain: domain, ip: ip, token: token },
     success: function (response) {
       if (response.success) {
-        showAlert("success");
         table.ajax.reload();
       } else showAlert("error", response.message);
     },
--- a/scripts/pi-hole/js/settings.js
+++ b/scripts/pi-hole/js/settings.js
@@ -18,6 +18,13 @@
     $('input[name="AddIP"]').val(ip);
     $('input[name="AddMAC"]').val(mac);
   });
+  // dhcp end start
+  $("#dhcpstart").change(function() {
+    $("#dhcpend").attr('min',parseInt($("#dhcpstart").val()) + 1);
+  });
+  $("#dhcpend").attr({
+    "min" : parseInt($("#dhcpstart").val()) + 1
+  });
 
   // prepare Teleporter Modal & iframe for operation
   $("#teleporterModal").on("show.bs.modal", function () {
@@ -229,7 +236,7 @@
   });
 }
 
-var leasetable, staticleasetable;
+var leasetable, lease6table, staticleasetable;
 $(function () {
   if (document.getElementById("DHCPLeasesTable")) {
     leasetable = $("#DHCPLeasesTable").DataTable({
@@ -275,6 +282,51 @@
       },
     });
   }
+
+  if (document.getElementById("DHCP6LeasesTable")) {
+    lease6table = $("#DHCP6LeasesTable").DataTable({
+      dom:
+        "<'row'<'col-sm-12'f>>" +
+        "<'row'<'col-sm-4'l><'col-sm-8'p>>" +
+        "<'row'<'col-sm-12'<'table-responsive'tr>>>" +
+        "<'row'<'col-sm-5'i><'col-sm-7'p>>",
+      lengthMenu: [
+        [5, 10, 25, 50, 100, -1],
+        [5, 10, 25, 50, 100, "All"],
+      ],
+      columnDefs: [
+        { bSortable: false, orderable: false, targets: -1 },
+        {
+          targets: [0, 1],
+          render: $.fn.dataTable.render.text(),
+        },
+        {
+          targets: 2,
+          render: function (data) {
+            // Show "unknown", when host is "*"
+            var str;
+            if (data === "*") {
+              str = "<i>unknown</i>";
+            } else {
+              str = typeof data === "string" ? utils.escapeHtml(data) : data;
+            }
+
+            return str;
+          },
+        },
+      ],
+      paging: true,
+      order: [[2, "asc"]],
+      stateSave: true,
+      stateDuration: 0,
+      stateSaveCallback: function (settings, data) {
+        utils.stateSaveCallback("activeDhcp6LeaseTable", data);
+      },
+      stateLoadCallback: function () {
+        return utils.stateLoadCallback("activeDhcp6LeaseTable");
+      },
+    });
+  }
 
   if (document.getElementById("DHCPStaticLeasesTable")) {
     staticleasetable = $("#DHCPStaticLeasesTable").DataTable({
--- a/scripts/pi-hole/php/FTL.php
+++ b/scripts/pi-hole/php/FTL.php
@@ -6,32 +6,14 @@
 *  This file is copyright under the latest version of the EUPL.
 *  Please see LICENSE file for your rights under this license. */
 
-const DEFAULT_FTLCONFFILE = "/etc/pihole/pihole-FTL.conf";
 const DEFAULT_FTL_IP = "127.0.0.1";
 const DEFAULT_FTL_PORT = 4711;
 
-function piholeFTLConfig($piholeFTLConfFile = DEFAULT_FTLCONFFILE, $force = false) {
-    static $piholeFTLConfig;
-
-    if (isset($piholeFTLConfig) && !$force) {
-        return $piholeFTLConfig;
-    }
-
-    if (is_readable($piholeFTLConfFile)) {
-        $piholeFTLConfig = parse_ini_file($piholeFTLConfFile);
-    } else {
-        $piholeFTLConfig = array();
-    }
-
-    return $piholeFTLConfig;
-}
-
 function connectFTL($address, $port) {
     if ($address == DEFAULT_FTL_IP) {
-        $config = piholeFTLConfig();
         // Read port
-        $portfileName = isset($config['PORTFILE']) ? $config['PORTFILE'] : '';
-        if ($portfileName != '') {
+		$portfileName = uci_get("pihole", "@pihole[0]", "portfile");
+		if (isset($portfileName)) {
             $portfileContents = file_get_contents($portfileName);
             if (is_numeric($portfileContents)) {
                 $port = intval($portfileContents);
--- a/scripts/pi-hole/php/auth.php
+++ b/scripts/pi-hole/php/auth.php
@@ -30,14 +30,13 @@
 }
 
 function check_cors() {
-    $setupVars = parse_ini_file("/etc/pihole/setupVars.conf");
-    $ipv4 = isset($setupVars["IPV4_ADDRESS"]) ? explode("/", $setupVars["IPV4_ADDRESS"])[0] : $_SERVER['SERVER_ADDR'];
-    $ipv6 = isset($setupVars["IPV6_ADDRESS"]) ? explode("/", $setupVars["IPV6_ADDRESS"])[0] : $_SERVER['SERVER_ADDR'];
+    $iface = uci_get("pihole", "@pihole[0]", "interface");
+    $ip4 = uci_get("network", $iface, "ipaddr");
+    $ipv4 = !isset($ip4) ? $_SERVER['SERVER_ADDR'] : explode("/", $ip4)[0];
 
     // Check CORS
     $AUTHORIZED_HOSTNAMES = array(
         $ipv4,
-        $ipv6,
         str_replace(array("[","]"), array("",""), $_SERVER["SERVER_NAME"]),
         "pi.hole",
         "localhost"
--- a/scripts/pi-hole/php/customcname.php
+++ b/scripts/pi-hole/php/customcname.php
@@ -20,6 +20,7 @@
         case 'get':     echo json_encode(echoCustomCNAMEEntries()); break;
         case 'add':     echo json_encode(addCustomCNAMEEntry());    break;
         case 'delete':  echo json_encode(deleteCustomCNAMEEntry()); break;
+        case 'apply':   echo json_encode(restartFTLjson()); break;
         default:
             die("Wrong action");
     }
--- a/scripts/pi-hole/php/customdns.php
+++ b/scripts/pi-hole/php/customdns.php
@@ -20,6 +20,7 @@
         case 'get':     echo json_encode(echoCustomDNSEntries()); break;
         case 'add':     echo json_encode(addCustomDNSEntry());    break;
         case 'delete':  echo json_encode(deleteCustomDNSEntry()); break;
+        case 'apply':   echo json_encode(restartFTLjson()); break;
         default:
             die("Wrong action");
     }
--- a/scripts/pi-hole/php/database.php
+++ b/scripts/pi-hole/php/database.php
@@ -8,11 +8,10 @@
 
 function getGravityDBFilename()
 {
-	// Get possible non-standard location of FTL's database
-	$FTLsettings = parse_ini_file("/etc/pihole/pihole-FTL.conf");
-	if(isset($FTLsettings["GRAVITYDB"]))
+	$GDBFile = uci_get("pihole", "@pihole[0]", "gravitydb");
+	if(isset($GDBFile))
 	{
-		return $FTLsettings["GRAVITYDB"];
+		return $GDBFile;
 	}
 	else
 	{
@@ -22,11 +21,10 @@
 
 function getQueriesDBFilename()
 {
-	// Get possible non-standard location of FTL's database
-	$FTLsettings = parse_ini_file("/etc/pihole/pihole-FTL.conf");
-	if(isset($FTLsettings["DBFILE"]))
+	$DBF = uci_get("pihole", "@pihole[0]", "dbfile");
+	if(isset($DBF))
 	{
-		return $FTLsettings["DBFILE"];
+		return $DBF;
 	}
 	else
 	{
--- a/scripts/pi-hole/php/footer.php
+++ b/scripts/pi-hole/php/footer.php
@@ -41,15 +41,6 @@
 <?php
     // Flushes the system write buffers of PHP. This attempts to push everything we have so far all the way to the client's browser.
     flush();
-    // Run update checker
-    //  - determines local branch each time,
-    //  - determines local and remote version every 30 minutes
-    require "scripts/pi-hole/php/update_checker.php";
-
-    $coreVersionStr = $core_current . (isset($core_commit) ? " (" . $core_branch . ", " . $core_commit . ")" : "");
-    $ftlVersionStr = $FTL_current . (isset($FTL_commit) ? " (" . $FTL_branch . ", " . $FTL_commit . ")" : "");
-    $webVersionStr = $web_current . (isset($web_commit) ? " (" . $web_branch . ", " . $web_commit . ")" : "");
-    $dockerTag = htmlspecialchars(getenv('PIHOLE_DOCKER_TAG'));
 
     $githubBaseUrl = "https://github.com/pi-hole";
     $coreUrl = $githubBaseUrl . "/pi-hole";
@@ -61,6 +52,19 @@
     $dockerReleasesUrl = $dockerUrl . "/releases";
     $ftlReleasesUrl = $ftlUrl . "/releases";
     $webReleasesUrl = $webUrl . "/releases";
+	$openWRTver = parse_ini_file("/etc/openwrt_release");
+	if(isset($openWRTver["DISTRIB_ID"]))
+	{
+        $distrib_id = $openWRTver['DISTRIB_ID'];
+	}
+	if(isset($openWRTver["DISTRIB_RELEASE"]))
+	{
+        $distrib_rel = $openWRTver['DISTRIB_RELEASE'];
+	}
+	if(isset($openWRTver["DISTRIB_REVISION"]))
+	{
+        $distrib_rev = $openWRTver['DISTRIB_REVISION'];
+	}
 ?>
     <footer class="main-footer">
         <div class="row row-centered text-center">
@@ -71,45 +75,27 @@
 
         <div class="row row-centered text-center version-info">
             <div class="col-xs-12 col-sm-8 col-md-6">
-                <?php if (isset($core_commit) || isset($web_commit) || isset($FTL_commit)) { ?>
-                <ul class="list-unstyled">
-                    <?php if($dockerTag) { ?> <li><strong>Docker Tag</strong> <?php echo $dockerTag; ?></li> <?php } ?>
-                    <li><strong>Pi-hole</strong> <?php echo $coreVersionStr; ?></li>
-                    <li><strong>FTL</strong> <?php echo $ftlVersionStr; ?></li>
-                    <li><strong>Web Interface</strong> <?php echo $webVersionStr; ?></li>
-                </ul>
-                <?php } else { ?>
                 <ul class="list-inline">
-                    <?php if($dockerTag) { ?>
-                    <li>
-                        <strong>Docker Tag</strong>
-                        <a href="<?php echo $dockerReleasesUrl . "/" . $dockerTag; ?>" rel="noopener" target="_blank"><?php echo $dockerTag; ?></a>
-                    </li>
-                    <?php } ?>
                     <li>
                         <strong>Pi-hole</strong>
                         <a href="<?php echo $coreReleasesUrl . "/" . $core_current; ?>" rel="noopener" target="_blank"><?php echo $core_current; ?></a>
-                        <?php if ($core_update) { ?> &middot; <a class="lookatme" lookatme-text="Update available!" href="<?php echo $coreReleasesUrl . "/latest"; ?>" rel="noopener" target="_blank">Update available!</a><?php } ?>
                     </li>
                     <li>
                         <strong>FTL</strong>
                         <a href="<?php echo $ftlReleasesUrl . "/" . $FTL_current; ?>" rel="noopener" target="_blank"><?php echo $FTL_current; ?></a>
-                        <?php if ($FTL_update) { ?> &middot; <a class="lookatme" lookatme-text="Update available!" href="<?php echo $ftlReleasesUrl . "/latest"; ?>" rel="noopener" target="_blank">Update available!</a><?php } ?>
                     </li>
                     <li>
                         <strong>Web Interface</strong>
                         <a href="<?php echo $webReleasesUrl . "/" . $web_current; ?>" rel="noopener" target="_blank"><?php echo $web_current; ?></a>
-                        <?php if ($web_update) { ?> &middot; <a class="lookatme" lookatme-text="Update available!" href="<?php echo $webReleasesUrl . "/latest"; ?>" rel="noopener" target="_blank">Update available!</a><?php } ?>
                     </li>
                 </ul>
-                <?php if($core_update || $web_update || $FTL_update) { ?>
-                <?php if($dockerTag) { ?>
-                    <p>To install updates, <a href="https://github.com/pi-hole/docker-pi-hole#upgrading--reconfiguring" rel="noopener" target="_blank">replace this old container with a fresh upgraded image</a>.</p>
-                <?php } else { ?>
-                    <p>To install updates, run <code><a href="https://docs.pi-hole.net/main/update/" rel="noopener" target="_blank">pihole -up</a></code>.</p>
-                <?php } ?>
-                <?php } ?>
-                <?php } ?>
+                <ul class="list-inline">
+                    <li>
+                        <strong><?php echo $distrib_id; ?></strong>
+                        <?php echo $distrib_rel; ?>
+                        <?php echo $distrib_rev; ?>
+                    </li>
+                </ul>
             </div>
         </div>
     </footer>
--- a/scripts/pi-hole/php/func.php
+++ b/scripts/pi-hole/php/func.php
@@ -80,7 +80,7 @@
 		// Make sure that the email does not contain special characters which
 		// may be used to execute shell commands, even though they may be valid
 		// in an email address. If the escaped email does not equal the original
-		// email, it is not safe to store in setupVars.
+		// email, it is not safe to store in config file.
 		&& escapeshellcmd($email) === $email;
 }
 
@@ -140,20 +140,113 @@
  * @param $error_on_failure If true, a warning is raised if command execution fails. Defaults to true.
  */
 function pihole_execute($argument_string, $error_on_failure = true) {
-    $escaped = escapeshellcmd($argument_string);
-    $output = null;
-    $return_status = -1;
-    $command = "sudo pihole " . $escaped;
-    exec($command, $output, $return_status);
-    if($return_status !== 0)
-    {
+    $args = str_replace(" ", "','", $argument_string);
+    $command = "ubus call file exec \"{'command':'pihole','params':['" . $args . "']}\"";
+	$output = json_decode(shell_exec($command), true);
+    if($output['code'] !== 0) {
         trigger_error("Executing {$command} failed.", E_USER_WARNING);
     }
-    return $output;
+    return $output['stdout'];
 }
 
-// Custom DNS
-$customDNSFile = "/etc/pihole/custom.list";
+function send_signal_FTL($signum) {
+    $command = "ubus call service signal \"{'name':'pihole-FTL','signal':".intval($signum)."}\"";
+    exec($command, $out, $ret);
+    if($ret !== 0) {
+        trigger_error("Failed to send signal {$signum} to FTL, ret: {$ret}.", E_USER_WARNING);
+    }
+    return $ret;
+}
+
+function uci_changes($package) {
+	$changes = json_decode(shell_exec("ubus call uci changes \"{'config':'".$package."'}\""), true);
+	if(!empty($changes['changes'])) {
+    	return true;
+	}
+
+	return false;
+}
+
+function uci_commit($package, $ubus = false, $revert = false) {
+	if(uci_changes($package)) {
+		// comitting using ubus will auto trigger reload service because of procd trigger
+		if($ubus) {
+    		$command = "ubus call uci ".($revert ? "revert " : "commit ")."\"{'config':'".$package."'}\"";
+		} else {
+    		$command = "ubus call file exec \"{'command':'uci','params':['" .
+					($revert ? 'revert' : 'commit') . "','" . $package . "']}\"";
+		}
+    	exec($command, $out, $ret);
+		if($ret === 0) {
+    		return true;
+		}
+	}
+
+	return false;
+}
+
+function uci_get($package, $config, $option) {
+	$command = "ubus call uci get \"{'config':'".$package."','section':'".$config."'}\"";
+    $output = json_decode(shell_exec($command), true);
+	$value = $output['values'];
+	if(isset($value[$option])) {
+		return is_array($value[$option]) ? implode(" ", $value[$option]) : $value[$option];
+	}
+    return null;
+}
+
+function uci_del($package, $config, $option) {
+	$command = "ubus call uci delete \"{'config':'".$package."','section':'".$config."','option':'".$option."'}\"";
+    exec($command, $out, $ret);
+    return $ret;
+}
+
+function uci_set($package, $config, $option, $value, $list = false) {
+	if($list) {
+		$val = [$option => explode(" ", $value)];
+		if(empty($val[$option][0])) {
+			return uci_del($package, $config, $option);
+		}
+	} else {
+		if(!isset($value)) {
+			return uci_del($package, $config, $option);
+		}
+		$val = [$option => $value];
+	}
+
+	$args = ['config' => $package, 'section' => $config, 'values' => $val];
+	$command = "ubus call uci set '".json_encode($args)."'";
+    exec($command, $out, $ret);
+    if($ret !== 0) {
+        trigger_error("Executing {$command} failed.", E_USER_WARNING);
+		// revert changes if any
+        uci_commit($package, false, true);
+    }
+    return $ret;
+}
+
+function uci_add_type($package, $type) {
+	$command = "ubus call uci add \"{'config':'".$package."','type':'".$type."'}\"";
+	$out = json_decode(shell_exec($command), true);
+    return $out['section'];;
+}
+
+function restartFTLjson($json=true)
+{
+    try
+    {
+		// FTL will auto restart if any changes
+        if (uci_commit("dhcp", true)) {
+        	return returnSuccess("Reconfigure dnsmasq and restarting FTL...", $json);
+        } else {
+        	return returnSuccess("No changes has been made...", $json);
+		}
+    }
+    catch (\Exception $ex)
+    {
+        return returnError($ex->getMessage(), $json);
+    }
+}
 
 function echoCustomDNSEntries()
 {
@@ -168,34 +261,28 @@
 
 function getCustomDNSEntries()
 {
-    global $customDNSFile;
-
     $entries = [];
+    $cmd = "ubus call uci get \"{'config':'dhcp','type':'domain'}\"";
+    $output = json_decode(shell_exec($cmd), true);
 
-    $handle = fopen($customDNSFile, "r");
-    if ($handle)
-    {
-        while (($line = fgets($handle)) !== false) {
-            $line = str_replace("\r","", $line);
-            $line = str_replace("\n","", $line);
-            $explodedLine = explode (" ", $line);
-
-            if (count($explodedLine) != 2)
-                continue;
+	foreach($output['values'] as $entry) {
+        $domain = $entry['name'];
+        $ip = $entry['ip'];
 
-            $data = new \stdClass();
-            $data->ip = $explodedLine[0];
-            $data->domain = $explodedLine[1];
-            $entries[] = $data;
+        if (!isset($domain) || !isset($ip)) {
+            continue;
         }
 
-        fclose($handle);
+        $data = new \stdClass();
+        $data->ip = $ip;
+        $data->domain = $domain;
+        $entries[] = $data;
     }
 
     return $entries;
 }
 
-function addCustomDNSEntry($ip="", $domain="", $reload="", $json=true)
+function addCustomDNSEntry($ip="", $domain="", $json=true)
 {
     try
     {
@@ -205,9 +292,6 @@
         if(isset($_REQUEST['domain']))
             $domain = trim($_REQUEST['domain']);
 
-        if(isset($_REQUEST['reload']))
-            $reload = $_REQUEST['reload'];
-
         if (empty($ip))
             return returnError("IP must be set", $json);
 
@@ -232,7 +316,19 @@
         }
 
         // Add record
-        pihole_execute("-a addcustomdns ".$ip." ".$domain." ".$reload);
+        $section = uci_add_type("dhcp", "domain");
+        if (isset($section)) {
+            if (uci_set("dhcp", $section, "name", $domain) !== 0) {
+				// revert changes if any
+            	uci_commit("dhcp", false, true);
+                return returnError("Failed to set uci dhcp domain name: $domain");
+            }
+            if (uci_set("dhcp", $section, "ip", $ip) !== 0) {
+				// revert changes if any
+            	uci_commit("dhcp", false, true);
+                return returnError("Failed to set uci dhcp domain ip: $ip");
+            }
+        }
 
         return returnSuccess("", $json);
     }
@@ -268,9 +364,13 @@
         if (!$found)
             return returnError("This domain/ip association does not exist");
 
-        pihole_execute("-a removecustomdns ".$ip." ".$domain);
-
-        return returnSuccess();
+		$cmd = "ubus call uci delete \"{'config':'dhcp','type':'domain','match':{'name':'".$domain."','ip':'".$ip."'}}\"";
+		exec($cmd, $output, $ret);
+		if($ret !== 0) {
+            return returnError("Failed to delete DNS Record entry for $domain $ip, ret: $ret");
+		} else {
+            return returnSuccess();
+		}
     }
     catch (\Exception $ex)
     {
@@ -278,17 +378,19 @@
     }
 }
 
-function deleteAllCustomDNSEntries($reload="")
+function deleteAllCustomDNSEntries()
 {
     try
-		{
-        if(isset($_REQUEST['reload']))
-            $reload = $_REQUEST['reload'];
-
+	{
         $existingEntries = getCustomDNSEntries();
-        // passing false to pihole_execute stops pihole from reloading after each enty has been deleted
         foreach ($existingEntries as $entry) {
-            pihole_execute("-a removecustomdns ".$entry->ip." ".$entry->domain." ".$reload);
+			$cmd = "ubus call uci delete \"{'config':'dhcp','type':'domain','match':{'name':'".$entry->domain."','ip':'".$entry->ip."'}}\"";
+			exec($cmd, $output, $ret);
+			if($ret !== 0) {
+	            return returnError("Failed to delete DNS Record entry for $entry->domain $entry->ip, ret: $ret");
+			} else {
+	            return returnSuccess();
+			}
         }
 
     }
@@ -300,9 +402,6 @@
     return returnSuccess();
 }
 
-// CNAME
-$customCNAMEFile = "/etc/dnsmasq.d/05-pihole-custom-cname.conf";
-
 function echoCustomCNAMEEntries()
 {
     $entries = getCustomCNAMEEntries();
@@ -316,38 +415,28 @@
 
 function getCustomCNAMEEntries()
 {
-    global $customCNAMEFile;
-
     $entries = [];
+    $cmd = "ubus call uci get \"{'config':'dhcp','type':'cname'}\"";
+    $output = json_decode(shell_exec($cmd), true);
 
-    if (!file_exists($customCNAMEFile)) return $entries;
+    foreach($output['values'] as $entry) {
+        $cname = $entry['cname'];
+        $target = $entry['target'];
 
-    $handle = fopen($customCNAMEFile, "r");
-    if ($handle)
-    {
-        while (($line = fgets($handle)) !== false) {
-            $line = str_replace("cname=","", $line);
-            $line = str_replace("\r","", $line);
-            $line = str_replace("\n","", $line);
-            $explodedLine = explode (",", $line);
-
-            if (count($explodedLine) <= 1)
-                continue;
-
-            $data = new \stdClass();
-            $data->domains = array_slice($explodedLine, 0, -1);
-            $data->domain = implode(",", $data->domains);
-            $data->target = $explodedLine[count($explodedLine)-1];
-            $entries[] = $data;
+        if (!isset($cname) || !isset($target)) {
+            continue;
         }
 
-        fclose($handle);
+        $data = new \stdClass();
+        $data->target = $target;
+        $data->domain = $cname;
+        $entries[] = $data;
     }
 
     return $entries;
 }
 
-function addCustomCNAMEEntry($domain="", $target="", $reload="", $json=true)
+function addCustomCNAMEEntry($domain="", $target="", $json=true)
 {
     try
     {
@@ -357,9 +446,6 @@
         if(isset($_REQUEST['target']))
             $target = trim($_REQUEST['target']);
 
-        if(isset($_REQUEST['reload']))
-            $reload = $_REQUEST['reload'];
-
         if (empty($domain))
             return returnError("Domain must be set", $json);
 
@@ -380,11 +466,18 @@
 
         // Check if a record for one of the domains already exists
         foreach ($existingEntries as $entry)
-            foreach ($domains as $d)
-                if (in_array($d, $entry->domains))
-                    return returnError("There is already a CNAME record for '$d'", $json);
+            if ($entry->domain == $domain)
+                return returnError("There is already a CNAME record for $domain", $json);
 
-        pihole_execute("-a addcustomcname ".$domain." ".$target." ".$reload);
+        $section = uci_add_type("dhcp", "cname");
+        if (isset($section)) {
+            if (uci_set("dhcp", $section, "cname", $domain) !== 0) {
+                return returnError("Failed to set uci dhcp cname name: $domain");
+            }
+            if (uci_set("dhcp", $section, "target", $target) !== 0) {
+                return returnError("Failed to set uci dhcp cname target: $target");
+            }
+        }
 
         return returnSuccess("", $json);
     }
@@ -420,9 +513,13 @@
         if (!$found)
             return returnError("This domain/ip association does not exist");
 
-        pihole_execute("-a removecustomcname ".$domain." ".$target);
-
-        return returnSuccess();
+        $cmd = "ubus call uci delete \"{'config':'dhcp','type':'cname','match':{'cname':'".$domain."','target':'".$target."'}}\"";
+        exec($cmd, $output, $ret);
+        if($ret !== 0) {
+            return returnError("Failed to delete CNAME Record entry for $domain $target, ret: $ret");
+        } else {
+            return returnSuccess();
+        }
     }
     catch (\Exception $ex)
     {
@@ -430,17 +527,19 @@
     }
 }
 
-function deleteAllCustomCNAMEEntries($reload="")
+function deleteAllCustomCNAMEEntries()
 {
     try
     {
-        if(isset($_REQUEST['reload']))
-            $reload = $_REQUEST['reload'];
-
         $existingEntries = getCustomCNAMEEntries();
-        // passing false to pihole_execute stops pihole from reloading after each enty has been deleted
         foreach ($existingEntries as $entry) {
-            pihole_execute("-a removecustomcname ".$entry->domain." ".$entry->target." ".$reload);
+            $cmd = "ubus call uci delete \"{'config':'dhcp','type':'cname','match':{'cname':'".$entry->domain."','target':'".$entry->target."'}}\"";
+            exec($cmd, $output, $ret);
+            if($ret !== 0) {
+                return returnError("Failed to delete CNAME Record entry for $entry->domain $entry->target, ret: $ret");
+            } else {
+                return returnSuccess();
+            }
         }
 
     }
--- a/scripts/pi-hole/php/gravity.sh.php
+++ b/scripts/pi-hole/php/gravity.sh.php
@@ -30,8 +30,6 @@
     echo "data: ".implode("\ndata: ", explode("\n",$datatext))."\n\n";
 }
 
-$proc = popen("sudo pihole -g", 'r');
-while (!feof($proc)) {
-    echoEvent(fread($proc, 4096));
-}
+$proc = json_decode(shell_exec("ubus call file exec '{\"command\":\"/usr/lib/pihole/gravity.sh\"}'"), true);
+echoEvent($proc['stdout']);
 ?>
--- a/scripts/pi-hole/php/groups.php
+++ b/scripts/pi-hole/php/groups.php
@@ -219,7 +219,7 @@
             if(!is_bool($name_result))
             {
                 $res['name'] = $name_result['name'];
-                error_log("IP: ".$name_result['name']);
+                // error_log("IP: ".$name_result['name']);
             }
             else
             {
@@ -1229,5 +1229,5 @@
 }
 // Reload lists in pihole-FTL after having added something
 if ($reload) {
-    $output = pihole_execute('restartdns reload-lists');
+    $output = send_signal_FTL(35);
 }
--- a/scripts/pi-hole/php/header.php
+++ b/scripts/pi-hole/php/header.php
@@ -11,6 +11,8 @@
     require_once "scripts/pi-hole/php/FTL.php";
     require_once "scripts/pi-hole/php/func.php";
     require "scripts/pi-hole/php/theme.php";
+    require_once "scripts/pi-hole/php/update_checker.php";
+
     $scriptname = basename($_SERVER['SCRIPT_FILENAME']);
     $hostname = gethostname() ? gethostname() : "";
 
@@ -51,16 +53,7 @@
             // Use multiplication to get around the division-by-zero error
             $celsius *= 1e-3;
         }
-
-        // Get user-defined temperature limit if set
-        if(isset($setupVars['TEMPERATURE_LIMIT']))
-        {
-            $temperaturelimit = intval($setupVars['TEMPERATURE_LIMIT']);
-        }
-        else
-        {
-            $temperaturelimit = 60;
-        }
+        $temperaturelimit = 60;
     }
     else
     {
@@ -119,20 +112,10 @@
         $token = $_SESSION['token'];
     }
 
-    if(isset($setupVars['WEBUIBOXEDLAYOUT']))
-    {
-        if($setupVars['WEBUIBOXEDLAYOUT'] === "boxed")
-        {
-            $boxedlayout = true;
-        }
-        else
-        {
-            $boxedlayout = false;
-        }
-    }
-    else
-    {
-        $boxedlayout = true;
+    $boxedlayout = true;
+    $fluid = intval(uci_get("pihole", "@pihole[0]", "web_fluid"));
+    if($fluid === 1) {
+        $boxedlayout = false;
     }
 
     // Override layout setting if layout is changed via Settings page
@@ -155,7 +138,11 @@
     $FTLpid = intval(pidofFTL());
     $FTL = ($FTLpid !== 0 ? true : false);
 
-    $piholeFTLConf = piholeFTLConfig();
+    $piHoleInterface = uci_get("pihole", "@pihole[0]", "interface");
+    if (!isset($piHoleInterface)) {
+        $piHoleInterface = "lan";
+    }
+    $piHoleIfname = uci_get("network", $piHoleInterface, "device");
 ?>
 <!doctype html>
 <!-- Pi-hole: A black hole for Internet advertisements
@@ -249,7 +236,7 @@
 ?>
 
 <!-- Send token to JS -->
-<div id="enableTimer" hidden><?php if(file_exists("../custom_disable_timer")){ echo file_get_contents("../custom_disable_timer"); } ?></div>
+<div id="enableTimer" hidden><?php if(file_exists("/var/lib/pihole/custom_disable_timer")){ echo file_get_contents("/var/lib/pihole/custom_disable_timer"); } ?></div>
 <div class="wrapper">
     <header class="main-header">
         <!-- Logo -->
@@ -532,7 +519,7 @@
                     </a>
                 </li>
                 <!-- Tools -->
-                <li class="treeview<?php if (in_array($scriptname, array("messages.php", "gravity.php", "queryads.php", "auditlog.php", "taillog.php", "taillog-FTL.php", "debug.php", "network.php"))){ ?> active<?php } ?>">
+                <li class="treeview<?php if (in_array($scriptname, array("messages.php", "gravity.php", "queryads.php", "auditlog.php", "taillog.php", "taillog-FTL.php", "network.php"))){ ?> active<?php } ?>">
                   <a href="#">
                     <i class="fa fa-fw menu-icon fa-tools"></i> <span>Tools</span>
                     <span class="warning-count hidden"></span>
@@ -598,12 +585,6 @@
                             Tail pihole-FTL.log
                         </a>
                     </li>
-                    <!-- Generate debug log -->
-                    <li<?php if($scriptname === "debug.php"){ ?> class="active"<?php } ?>>
-                        <a href="debug.php">
-                            <i class="fa fa-fw menu-icon fa-ambulance"></i> Generate debug log
-                        </a>
-                    </li>
                     <!-- Network -->
                     <li<?php if($scriptname === "network.php"){ ?> class="active"<?php } ?>>
                         <a href="network.php">
--- a/scripts/pi-hole/php/loginpage.php
+++ b/scripts/pi-hole/php/loginpage.php
@@ -56,11 +56,10 @@
               </div>
               <div class="box-body">
                 <p>
-                  After installing Pi-hole for the first time, a password is generated and displayed to the user. The
-                  password cannot be retrieved later on, but it is possible to set a new password (or explicitly disable
+                  In order to set a new password (or explicitly disable
                   the password by setting an empty password) using the command
                 </p>
-                <pre>sudo pihole -a -p</pre>
+                <pre style="text-align:center">pihole -a -p</pre>
               </div>
             </div>
           </div>
--- a/scripts/pi-hole/php/password.php
+++ b/scripts/pi-hole/php/password.php
@@ -15,14 +15,8 @@
     ini_set('session.use_only_cookies', 1);
     session_start();
 
-    // Read setupVars.conf file
-    $setupVars = parse_ini_file("/etc/pihole/setupVars.conf");
-    // Try to read password hash from setupVars.conf
-    if(isset($setupVars['WEBPASSWORD']))
-    {
-        $pwhash = $setupVars['WEBPASSWORD'];
-    }
-    else
+    $pwhash = uci_get("pihole", "@pihole[0]", "web_password");
+    if(!isset($pwhash))
     {
         $pwhash = "";
     }
--- a/scripts/pi-hole/php/queryads.php
+++ b/scripts/pi-hole/php/queryads.php
@@ -41,19 +41,17 @@
 
 if(isset($_GET["exact"]))
 {
-    $exact = "-exact";
+    $exact = ",\"-exact\"";
 }
 elseif(isset($_GET["bp"]))
 {
-    $exact = "-bp";
+    $exact = ",\"-bp\"";
 }
 else
 {
     $exact = "";
 }
 
-$proc = popen("sudo pihole -q -adlist ".$url." ".$exact, 'r');
-while (!feof($proc)) {
-    echoEvent(fread($proc, 4096));
-}
+$proc = json_decode(shell_exec("ubus call file exec '{\"command\":\"/usr/lib/pihole/query.sh\",\"params\":[\"-adlist\",\"" . $url . "\"" . $exact . "]}'"), true);
+echoEvent(rtrim($proc['stdout']));
 ?>
--- a/scripts/pi-hole/php/savesettings.php
+++ b/scripts/pi-hole/php/savesettings.php
@@ -35,39 +35,46 @@
 }
 
 $dhcp_static_leases = array();
-function readStaticLeasesFile($origin_file="/etc/dnsmasq.d/04-pihole-static-dhcp.conf")
+function readStaticLeasesFile()
 {
 	global $dhcp_static_leases;
 	$dhcp_static_leases = array();
-	if(!file_exists($origin_file) || !is_readable($origin_file))
-		return false;
-
-	$dhcpstatic = @fopen($origin_file, 'r');
-	if(!is_resource($dhcpstatic))
-		return false;
+	$cmd = "ubus call uci get \"{'config':'dhcp','type':'host'}\"";
+	$output = json_decode(shell_exec($cmd), true);
 
-	while(!feof($dhcpstatic))
-	{
+	foreach($output['values'] as $entry) {
 		// Remove any possibly existing variable with this name
-		$mac = ""; $one = ""; $two = "";
-		sscanf(trim(fgets($dhcpstatic)),"dhcp-host=%[^,],%[^,],%[^,]",$mac,$one,$two);
-		if(strlen($mac) > 0 && validMAC($mac))
-		{
-			if(validIP($one) && strlen($two) == 0)
-				// dhcp-host=mac,IP - no HOST
-				array_push($dhcp_static_leases,["hwaddr"=>$mac, "IP"=>$one, "host"=>""]);
-			elseif(strlen($two) == 0)
-				// dhcp-host=mac,hostname - no IP
-				array_push($dhcp_static_leases,["hwaddr"=>$mac, "IP"=>"", "host"=>$one]);
-			else
-				// dhcp-host=mac,IP,hostname
-				array_push($dhcp_static_leases,["hwaddr"=>$mac, "IP"=>$one, "host"=>$two]);
+		$mac = ""; $ip = ""; $host = ""; $enable = true;
+		if(isset($entry['enable']))
+			if($entry['enable'] === '0')
+				$enable = false;
+
+		if(isset($entry['mac']))
+			$mac = $entry['mac'];
+
+		if(isset($entry['ip']))
+			$ip = $entry['ip'];
+		else
+			$ip = '<i>dynamic</i>';
+
+		if(isset($entry['name']))
+			$host = $entry['name'];
+
+		if(isset($entry['duid'])) {
+			$duid = $entry['duid'];
+			if(strpos($duid, ':') === false)
+				$duid = wordwrap($duid, 2, ':', true);
+		} else {
+			$duid = "<i>none</i>";
 		}
-		else if(validIP($one) && validDomain($mac))
-		{
-			// dhcp-host=hostname,IP - no MAC
-			array_push($dhcp_static_leases,["hwaddr"=>"", "IP"=>$one, "host"=>$mac]);
+
+		if(isset($entry['hostid'])) {
+			$hostid = $entry['hostid'];
+		} else {
+			$hostid = "<i>none</i>";
 		}
+
+		array_push($dhcp_static_leases,["enable"=>$enable,"hwaddr"=>$mac, "IP"=>$ip, "host"=>$host, "duid"=>$duid, "hostid"=>$hostid]);
 	}
 	return true;
 }
@@ -99,37 +106,32 @@
 {
 	// Reset list
 	$list = [];
-	$handle = @fopen("/etc/pihole/dns-servers.conf", "r");
-	if ($handle)
-	{
-		while (($line = fgets($handle)) !== false)
-		{
-			$line = rtrim($line);
-			$line = explode(';', $line);
-			$name = $line[0];
-			$values = [];
-			if (!empty($line[1]) && validIP($line[1])) {
-				$values["v4_1"] = $line[1];
-			}
-			if (!empty($line[2]) && validIP($line[2])) {
-				$values["v4_2"] = $line[2];
-			}
-			if (!empty($line[3]) && validIP($line[3])) {
-				$values["v6_1"] = $line[3];
-			}
-			if (!empty($line[4]) && validIP($line[4])) {
-				$values["v6_2"] = $line[4];
-			}
-            $list[$name] = $values;
+	$cmd = "ubus call uci get \"{'config':'pihole','type':'dns_server'}\"";
+	$output = json_decode(shell_exec($cmd), true);
+
+	foreach($output['values'] as $entry) {
+		$name = $entry['name'];
+		$values = [];
+		if (isset($entry['ipv4'][0]) && validIP($entry['ipv4'][0])) {
+			$values["v4_1"] = $entry['ipv4'][0];
 		}
-		fclose($handle);
+		if (isset($entry['ipv4'][1]) && validIP($entry['ipv4'][1])) {
+			$values["v4_2"] = $entry['ipv4'][1];
+		}
+		if (isset($entry['ipv6'][0]) && validIP($entry['ipv6'][0])) {
+			$values["v6_1"] = $entry['ipv6'][0];
+		}
+		if (isset($entry['ipv6'][1]) && validIP($entry['ipv6'][1])) {
+			$values["v6_2"] = $entry['ipv6'][1];
+		}
+        $list[$name] = $values;
 	}
 	return $list;
 }
 
 require_once("database.php");
 
-function addStaticDHCPLease($mac, $ip, $hostname) {
+function addStaticDHCPLease($mac, $ip, $hostname, $duid, $hostid) {
 	global $error, $success, $dhcp_static_leases;
 
 	try {
@@ -154,11 +156,15 @@
 			throw new Exception("You can not omit both the IP address and the host name!<br>", 3);
 		}
 
-		if(strlen($hostname) == 0)
-			$hostname = "nohost";
+		if (strlen($hostid) > 4 || !trim($hostid, '0..9A..Fa..f') == '')
+		{
+			throw new Exception("Hostid (".htmlspecialchars($hostid).") should be HEX format and no more than 4 characters!<br>", 4);
+		}
 
-		if(strlen($ip) == 0)
-			$ip = "noip";
+		if (strlen($duid) > 0 && (strlen($duid) < 20 || strlen($duid) > 42))
+		{
+			throw new Exception("DUID (".htmlspecialchars($hostid).") is invalid!<br>", 5);
+		}
 
 		// Test if this lease is already included
 		readStaticLeasesFile();
@@ -168,7 +174,7 @@
 			{
 				throw new Exception("Static lease for MAC address (".htmlspecialchars($mac).") already defined!<br>", 4);
 			}
-			if($ip !== "noip" && $lease["IP"] === $ip)
+			if($lease["IP"] === $ip)
 			{
 				throw new Exception("Static lease for IP address (".htmlspecialchars($ip).") already defined!<br>", 5);
 			}
@@ -176,9 +182,40 @@
 			{
 				throw new Exception("Static lease for hostname (".htmlspecialchars($hostname).") already defined!<br>", 6);
 			}
+			if($lease["hostid"] === $hostid)
+			{
+				throw new Exception("Static lease for hostid (".htmlspecialchars($hostname).") already defined!<br>", 6);
+			}
+			if($lease["duid"] === $duid)
+			{
+				throw new Exception("Static lease for DUID (".htmlspecialchars($hostname).") already defined!<br>", 6);
+			}
+		}
+
+		$section = uci_add_type("dhcp", "host");
+		if (isset($section)) {
+			if (uci_set("dhcp", $section, "mac", $mac) !== 0)
+				$error .= "Failed to set uci dhcp host mac (".htmlspecialchars($mac).")!<br>";
+
+			if (uci_set("dhcp", $section, "name", $hostname) !== 0)
+				$error .= "Failed to set uci dhcp host name (".htmlspecialchars($mac).")!<br>";
+
+			if (uci_set("dhcp", $section, "ip", $ip) !== 0)
+				$error .= "Failed to set uci dhcp host ip (".htmlspecialchars($mac).")!<br>";
+
+			if (uci_set("dhcp", $section, "hostid", $hostid) !== 0)
+				$error .= "Failed to set uci dhcp host hostid (".htmlspecialchars($mac).")!<br>";
+
+			if (uci_set("dhcp", $section, "duid", $duid) !== 0)
+				$error .= "Failed to set uci dhcp host duid (".htmlspecialchars($mac).")!<br>";
+		}
+
+		if(strlen($error)) {
+			// revert changes if any error occurred
+			uci_commit("dhcp", false, true);
+    		throw new Exception("Failed to add new dhcp static!<br>", 4);
 		}
 
-		pihole_execute("-a addstaticdhcp ".$mac." ".$ip." ".$hostname);
 		$success .= "A new static address has been added";
 		return true;
 	} catch(Exception $exception) {
@@ -267,31 +304,32 @@
 				// Check if domain-needed is requested
 				if(isset($_POST["DNSrequiresFQDN"]))
 				{
-					$extra = "domain-needed ";
+					uci_set("dhcp", "@dnsmasq[0]", "domainneeded", 1);
 				}
 				else
 				{
-					$extra = "domain-not-needed ";
+					uci_set("dhcp", "@dnsmasq[0]", "domainneeded", 0);
 				}
 
+
 				// Check if domain-needed is requested
 				if(isset($_POST["DNSbogusPriv"]))
 				{
-					$extra .= "bogus-priv ";
+					uci_set("dhcp", "@dnsmasq[0]", "boguspriv", 1);
 				}
 				else
 				{
-					$extra .= "no-bogus-priv ";
+					uci_set("dhcp", "@dnsmasq[0]", "boguspriv", 0);
 				}
 
 				// Check if DNSSEC is requested
 				if(isset($_POST["DNSSEC"]))
 				{
-					$extra .= "dnssec";
+					uci_set("dhcp", "@dnsmasq[0]", "dnssec", 1);
 				}
 				else
 				{
-					$extra .= "no-dnssec";
+					uci_set("dhcp", "@dnsmasq[0]", "dnssec", 0);
 				}
 
 				// Check if rev-server is requested
@@ -299,17 +337,21 @@
 				{
 					// Validate CIDR IP
 					$cidr = trim($_POST["rev_server_cidr"]);
-					if (!validCIDRIP($cidr))
+					if (strlen($cidr) > 0 && !validCIDRIP($cidr))
 					{
 						$error .= "Conditional forwarding subnet (\"".htmlspecialchars($cidr)."\") is invalid!<br>".
 						          "This field requires CIDR notation for local subnets (e.g., 192.168.0.0/16).<br>";
+					} else {
+						uci_del("dhcp", "@dnsmasq[0]", "cf_rev_server_cidr");
 					}
 
 					// Validate target IP
 					$target = trim($_POST["rev_server_target"]);
-					if (!validIP($target))
+					if (strlen($target) > 0 && !validIP($target))
 					{
 						$error .= "Conditional forwarding target IP (\"".htmlspecialchars($target)."\") is invalid!<br>";
+					} else {
+						uci_del("dhcp", "@dnsmasq[0]", "cf_rev_server_target");
 					}
 
 					// Validate conditional forwarding domain name (empty is okay)
@@ -317,58 +359,96 @@
 					if(strlen($domain) > 0 && !validDomain($domain))
 					{
 						$error .= "Conditional forwarding domain name (\"".htmlspecialchars($domain)."\") is invalid!<br>";
+					} else {
+						uci_del("dhcp", "@dnsmasq[0]", "cf_address");
 					}
 
 					if(!$error)
 					{
-						$extra .= " rev-server ".$cidr." ".$target." ".$domain;
+						uci_set("dhcp", "@dnsmasq[0]", "cf_rev_server_cidr", $cidr);
+						uci_set("dhcp", "@dnsmasq[0]", "cf_rev_server_target", $target);
+						uci_set("dhcp", "@dnsmasq[0]", "cf_address", $domain);
 					}
 				}
 
 				// Check if DNSinterface is set
 				if(isset($_POST["DNSinterface"]))
 				{
-					if($_POST["DNSinterface"] === "single")
-					{
-						$DNSinterface = "single";
-					}
-					elseif($_POST["DNSinterface"] === "bind")
-					{
-						$DNSinterface = "bind";
+					$old_notinterface = uci_get("dhcp", "@dnsmasq[0]", "notinterface");
+					$old_interface = uci_get("dhcp", "@dnsmasq[0]", "interface");
+					if ($_POST["DNSinterface"] === "local") {
+						uci_set("dhcp", "@dnsmasq[0]", "localservice", 1);
+
+						$notinterface = trim(str_replace("nonexisting", "", $old_notinterface));
+						$interface = trim(str_replace($piHoleInterface, "", $old_interface));
+
+						if($old_interface !== $interface) {
+							uci_set("dhcp", "@dnsmasq[0]", "interface", $interface, true);
+						}
+
+						if($old_notinterface !== $notinterface) {
+							uci_set("dhcp", "@dnsmasq[0]", "notinterface", $notinterface, true);
+	                	}
 					}
-					elseif($_POST["DNSinterface"] === "all")
-					{
-						$DNSinterface = "all";
+					elseif ($_POST["DNSinterface"] === "single") {
+						uci_set("dhcp", "@dnsmasq[0]", "localservice", 0);
+
+						$notinterface = trim(str_replace("nonexisting", "", $old_notinterface));
+						$interface = trim($piHoleInterface." ".$old_interface);
+
+						if($old_notinterface !== $notinterface) {
+							uci_set("dhcp", "@dnsmasq[0]", "notinterface", $notinterface, true);
+	                	}
+
+	                	if ($interface !== $old_interface) {
+							uci_set("dhcp", "@dnsmasq[0]", "interface", $interface, true);
+	                	}
 					}
-					else
-					{
-						$DNSinterface = "local";
+					elseif ($_POST["DNSinterface"] === "all") {
+						uci_set("dhcp", "@dnsmasq[0]", "localservice", 0);
+
+						$notinterface = trim($old_notinterface." nonexisting");
+						$interface = trim(str_replace($piHoleInterface, "", $old_interface));
+
+						if($old_interface !== $interface) {
+							uci_set("dhcp", "@dnsmasq[0]", "interface", $interface, true);
+						}
+
+	                	if ($notinterface !== $old_notinterface) {
+							uci_set("dhcp", "@dnsmasq[0]", "notinterface", $notinterface, true);
+	                	}
 					}
 				}
-				else
-				{
-					// Fallback
-					$DNSinterface = "local";
+
+				if (implode (" ", $DNSservers) !== uci_get("dhcp", "@dnsmasq[0]", "server")) {
+					uci_set("dhcp", "@dnsmasq[0]", "server", implode (" ", $DNSservers), true);
 				}
-				pihole_execute("-a -i ".$DNSinterface." -web");
 
 				// Add rate-limiting settings
 				if(isset($_POST["rate_limit_count"]) && isset($_POST["rate_limit_interval"]))
 				{
-					// Restart of FTL is delayed
-					pihole_execute("-a ratelimit " . intval($_POST["rate_limit_count"]) . " " . intval($_POST["rate_limit_interval"]) . " false");
+					if(intval($_POST["rate_limit_count"]) !== 1000 && intval($_POST["rate_limit_interval"]) !== 60)
+						uci_set("pihole", "@pihole[0]", "rate_limit", intval($_POST["rate_limit_count"]) . "/" . intval($_POST["rate_limit_interval"]));
 				}
 
 				// If there has been no error we can save the new DNS server IPs
 				if(!strlen($error))
 				{
-					$IPs = implode (",", $DNSservers);
-					$return = pihole_execute("-a setdns \"".$IPs."\" ".$extra);
-					$success .= htmlspecialchars(end($return))."<br>";
-					$success .= "The DNS settings have been updated (using ".$DNSservercount." DNS servers)";
+					if(isset($_POST["restartFTL"])) {
+						// auto restarted when commiting using ubus
+						if(uci_commit("dhcp", true) || uci_commit("pihole", true)) {
+							$success .= "Applying changes (Restarting FTL)";
+						} else {
+							$success .= "Nothing has been changed, not applying!";
+						}
+					} else {
+						$success .= "Settings has been saved.";
+					}
 				}
 				else
 				{
+					// revert changes if any
+					uci_commit("dhcp", false, true);
 					$error .= "The settings have been reset to their previous values";
 				}
 
@@ -403,6 +483,8 @@
 				// array_filter( ... ) will remove any empty lines
 				$domains = array_filter(preg_split('/\r\n|[\r\n]/', $_POST["domains"]));
 				$clients = array_filter(preg_split('/\r\n|[\r\n]/', $_POST["clients"]));
+				$oldDomains = explode(" ", uci_get("pihole", "@pihole[0]", "api_exclude_domains"));
+				$oldClients = explode(" ", uci_get("pihole", "@pihole[0]", "api_exclude_clients"));
 
 				$domainlist = "";
 				$first = true;
@@ -414,7 +496,7 @@
 					}
 					if(!$first)
 					{
-						$domainlist .= ",";
+						$domainlist .= " ";
 					}
 					else
 					{
@@ -433,7 +515,7 @@
 					}
 					if(!$first)
 					{
-						$clientlist .= ",";
+						$clientlist .= " ";
 					}
 					else
 					{
@@ -442,39 +524,53 @@
 					$clientlist .= $client;
 				}
 
-				// Set Top Lists options
-				if(!strlen($error))
-				{
-					// All entries are okay
-					pihole_execute("-a setexcludedomains ".$domainlist);
-					pihole_execute("-a setexcludeclients ".$clientlist);
-					$success .= "The API settings have been updated<br>";
-				}
-				else
-				{
-					$error .= "The settings have been reset to their previous values";
-				}
+				if ($domains !== $oldDomains)
+					uci_set("pihole", "@pihole[0]", "api_exclude_domains", trim($domainlist), true);
+
+				if ($clients !== $oldClients)
+					uci_set("pihole", "@pihole[0]", "api_exclude_clients", trim($clientlist), true);
 
 				// Set query log options
 				if(isset($_POST["querylog-permitted"]) && isset($_POST["querylog-blocked"]))
 				{
-					pihole_execute("-a setquerylog all");
-					$success .= "All entries will be shown in Query Log";
+					if (uci_set("pihole", "@pihole[0]", "api_query_log_show", "all") !== 0) {
+						$error .= "Failed to set api_query_log_show to all<br>";
+					}
 				}
 				elseif(isset($_POST["querylog-permitted"]))
 				{
-					pihole_execute("-a setquerylog permittedonly");
-					$success .= "Only permitted will be shown in Query Log";
+					if (uci_set("pihole", "@pihole[0]", "api_query_log_show", "permittedonly") !== 0) {
+						$error .= "Failed to set api_query_log_show to permittedonly<br>";
+					}
 				}
 				elseif(isset($_POST["querylog-blocked"]))
 				{
-					pihole_execute("-a setquerylog blockedonly");
-					$success .= "Only blocked entries will be shown in Query Log";
+					if (uci_set("pihole", "@pihole[0]", "api_query_log_show", "blockedonly") !== 0) {
+						$error .= "Failed to set api_query_log_show to blockedonly<br>";
+					}
+				}
+				else
+				{
+					if (uci_set("pihole", "@pihole[0]", "api_query_log_show", "nothing") !== 0) {
+						$error .= "Failed to set api_query_log_show to nothing<br>";
+					}
+				}
+
+				if(!strlen($error))
+				{
+					if(uci_commit("pihole")) {
+						$success .= "The API settings have been updated<br>";
+						// send a SIGHUP to reload/reread uci config after the changes
+						send_signal_FTL(1);
+					} else {
+						$success .= "No changes are made.";
+					}
 				}
 				else
 				{
-					pihole_execute("-a setquerylog nothing");
-					$success .= "No entries will be shown in Query Log";
+					// revert changes if any
+					uci_commit("pihole", false, true);
+					$error .= "The settings have been reset to their previous values";
 				}
 
 				break;
@@ -491,37 +587,45 @@
 				}
 				else
 				{
-					pihole_execute('-a -e \''.$adminemail.'\'');
+					if(uci_set("pihole", "@pihole[0]", "admin_email", $adminemail) !== 0)
+						$error .= "Failed to set admin_email<br>";
 				}
+
 				if(isset($_POST["boxedlayout"]))
 				{
-					pihole_execute('-a layout boxed');
+					uci_del("pihole", "@pihole[0]", "web_fluid");
 				}
 				else
 				{
-					pihole_execute('-a layout traditional');
+					if(uci_set("pihole", "@pihole[0]", "web_fluid", 1) !== 0)
+						$error .= "Failed to set web_fluid<br>";
 				}
+
 				if(isset($_POST["webtheme"]))
 				{
 					global $available_themes;
-					if(array_key_exists($_POST["webtheme"], $available_themes))
-						exec('sudo pihole -a theme '.$_POST["webtheme"]);
+					if(array_key_exists($_POST["webtheme"], $available_themes)) {
+						if(uci_set("pihole", "@pihole[0]", "web_theme", $_POST["webtheme"]) !== 0)
+							$error .= "Failed to set web_theme<br>";
+					}
 				}
-				$success .= "The webUI settings have been updated";
-				break;
 
-			case "poweroff":
-				pihole_execute("-a poweroff");
-				$success = "The system will poweroff in 5 seconds...";
-				break;
+				if(!strlen($error)) {
+					if(uci_commit("pihole")) {
+						send_signal_FTL(1);
+						$success .= "The webUI settings have been updated";
+					} else {
+						$success .= "No changes are made.";
+					}
+				} else {
+					uci_commit("pihole", false, true);
+					$error .= "The settings have been reset to their previous values";
+				}
 
-			case "reboot":
-				pihole_execute("-a reboot");
-				$success = "The system will reboot in 5 seconds...";
 				break;
 
 			case "restartdns":
-				pihole_execute("-a restartdns");
+				shell_exec("ubus call file exec \"{'command':'/etc/init.d/pihole-FTL','params':['restart']}\"");
 				$success = "The DNS server has been restarted";
 				break;
 
@@ -531,30 +635,39 @@
 				break;
 
 			case "DHCP":
-
 				if(isset($_POST["addstatic"]))
 				{
 					$mac = trim($_POST["AddMAC"]);
 					$ip = trim($_POST["AddIP"]);
 					$hostname = trim($_POST["AddHostname"]);
+					$duid = trim($_POST["AddDUID"]);
+					$hostid = trim($_POST["AddHostID"]);
 
-					addStaticDHCPLease($mac, $ip, $hostname);
+					addStaticDHCPLease($mac, $ip, $hostname, $duid, $hostid);
 					break;
 				}
 
 				if(isset($_POST["removestatic"]))
 				{
-					$mac = $_POST["removestatic"];
-					if(!validMAC($mac))
-					{
-						$error .= "MAC address (".htmlspecialchars($mac).") is invalid!<br>";
+					$target = $_POST["removestatic"];
+					if(validMAC($target)) {
+						$target = strtoupper($target);
+						$match = 'mac';
+					} elseif(validIP($target)) {
+						$match = 'ip';
+					} else {
+						$error .= "Target (".htmlspecialchars($target).") is not a valid MAC nor IP!<br>";
 					}
-					$mac = strtoupper($mac);
 
 					if(!strlen($error))
 					{
-						pihole_execute("-a removestaticdhcp ".$mac);
-						$success .= "The static address with MAC address ".htmlspecialchars($mac)." has been removed";
+						$cmd = "ubus call uci delete \"{'config':'dhcp','type':'host','match':{'".$match."':'".$target."'}}\"";
+						exec($cmd, $output, $ret);
+						if($ret !== 0) {
+							$error .= "Failed to delete Static DHCP of (".htmlspecialchars($target).").<br>";
+						} else {
+							$success .= "The static address with target (".htmlspecialchars($target).") has been removed";
+						}
 					}
 					break;
 				}
@@ -562,26 +675,35 @@
 				if(isset($_POST["active"]))
 				{
 					// Validate from IP
-					$from = $_POST["from"];
-					if (!validIP($from))
+					$from = intval($_POST["from"]);
+					if (!($from > 1) && ($from < 255))
 					{
 						$error .= "From IP (".htmlspecialchars($from).") is invalid!<br>";
 					}
+					else
+					{
+						uci_set("dhcp", $piHoleInterface, "start", $from);
+					}
 
 					// Validate to IP
-					$to = $_POST["to"];
-					if (!validIP($to))
+					$to = intval($_POST["to"]);
+					$enddhcp = $to - $from;
+					if (!(2 <= $to) && ($to <= 254))
 					{
 						$error .= "To IP (".htmlspecialchars($to).") is invalid!<br>";
 					}
-
-					// Validate router IP
-					$router = $_POST["router"];
-					if (!validIP($router))
+					else
 					{
-						$error .= "Router IP (".htmlspecialchars($router).") is invalid!<br>";
+						uci_set("dhcp", $piHoleInterface, "limit", $enddhcp);
 					}
 
+					// Validate router IP, DISABLED
+					//$router = $_POST["router"];
+					//if (!validIP($router))
+					//{
+					//	$error .= "Router IP (".htmlspecialchars($router).") is invalid!<br>";
+					//}
+
 					$domain = $_POST["domain"];
 
 					// Validate Domain name
@@ -589,45 +711,67 @@
 					{
 						$error .= "Domain name ".htmlspecialchars($domain)." is invalid!<br>";
 					}
+					else
+					{
+						uci_set("dhcp", $piHoleInterface, "domain_iface", $domain);
+					}
 
-					$leasetime = $_POST["leasetime"];
+					$leasetime = intval($_POST["leasetime"]);
 
 					// Validate Lease time length
-					if(!is_numeric($leasetime) || intval($leasetime) < 0)
+					if(!is_numeric($leasetime) || $leasetime < 0)
 					{
 						$error .= "Lease time ".htmlspecialchars($leasetime)." is invalid!<br>";
 					}
+					else
+					{
+						uci_set("dhcp", $piHoleInterface, "leasetime", $leasetime . "h");
+					}
 
-					if(isset($_POST["useIPv6"]))
+					if(isset($_POST["DHCP_rapid_commit"]))
 					{
-						$ipv6 = "true";
-						$type = "(IPv4 + IPv6)";
+						uci_set("dhcp", "@dnsmasq[0]", "rapidcommit", 1);
 					}
 					else
 					{
-						$ipv6 = "false";
-						$type = "(IPv4)";
+						uci_del("pihole", "@pihole[0]", "rapidcommit");
 					}
 
-					if(isset($_POST["DHCP_rapid_commit"]))
+					if(isset($_POST["DHCP_sequential"]))
 					{
-						$rapidcommit = "true";
+						uci_set("dhcp", "@dnsmasq[0]", "sequential_ip", 1);
 					}
 					else
 					{
-						$rapidcommit = "false";
+						uci_del("pihole", "@pihole[0]", "sequential_ip");
+					}
+
+					if(isset($_POST["leasefile"]))
+					{
+						uci_set("dhcp", "@dnsmasq[0]", "leasefile", $_POST["leasefile"]);
+					}
+					else
+					{
+						uci_set("dhcp", "@dnsmasq[0]", "leasefile", "/tmp/dhcp.leases");
 					}
 
 					if(!strlen($error))
 					{
-						pihole_execute("-a enabledhcp ".$from." ".$to." ".$router." ".$leasetime." ".$domain." ".$ipv6." ".$rapidcommit);
-						$success .= "The DHCP server has been activated ".htmlspecialchars($type);
+						if(isset($_POST["restartFTL"])) {
+							// auto restarted when commiting using ubus
+							if(uci_commit("dhcp", true)) {
+								$success .= "Applying changes (Restarting FTL)";
+							} else {
+								$success .= "Nothing has been changed, not applying!";
+							}
+						} else {
+							$success .= "Settings has been saved.";
+						}
 					}
 				}
 				else
 				{
-					pihole_execute("-a disabledhcp");
-					$success = "The DHCP server has been deactivated";
+					$error .= "DHCP server is not enabled";
 				}
 
 				break;
@@ -637,23 +781,35 @@
 				if($level >= 0 && $level <= 4)
 				{
 					// Check if privacylevel is already set
-					if (isset($piholeFTLConf["PRIVACYLEVEL"])) {
-						$privacylevel = intval($piholeFTLConf["PRIVACYLEVEL"]);
+					$privacylvl = uci_get("pihole", "@pihole[0]", "privacylevel");
+					if (isset($privacylvl)) {
+						$privacylevel = intval($privacylvl);
 					} else {
 						$privacylevel = 0;
 					}
 
-					// Store privacy level
-					pihole_execute("-a privacylevel ".$level);
+					if (uci_set("pihole", "@pihole[0]", "privacylevel", $level) !== 0) {
+						$error .= "Uci: Error has occurred while trying to set privacylevel to $level";
+					}
 
 					if($privacylevel > $level)
 					{
-						pihole_execute("-a restartdns");
-						$success .= "The privacy level has been decreased and the DNS resolver has been restarted";
+						// auto restarted when commiting using ubus
+						if(uci_commit("pihole", true)) {
+							$success .= "The privacy level has been decreased and the DNS resolver has been restarted";
+						} else {
+							$error .= "Fail to set privacy level from (".$privacylevel.") to (".$level.")!";
+						}
 					}
 					elseif($privacylevel < $level)
 					{
-						$success .= "The privacy level has been increased";
+						if(uci_commit("pihole")) {
+							// send a SIGHUP to reload/reread uci config after the changes
+							send_signal_FTL(1);
+							$success .= "The privacy level has been increased";
+						} else {
+							$error .= "Fail to set privacy level from (".$privacylevel.") to (".$level.")!";
+						}
 					}
 					else
 					{
--- a/scripts/pi-hole/php/tailLog.php
+++ b/scripts/pi-hole/php/tailLog.php
@@ -14,11 +14,19 @@
 // files as large as the pihole.log
 if(isset($_GET["FTL"]))
 {
-	$file = fopen("/var/log/pihole-FTL.log","r");
+    $FTLlog = uci_get("pihole", "@pihole[0]", "logfile");
+	if(!isset($FTLlog))
+    	$FTLlog = "/var/log/pihole-FTL.log";
+
+	$file = fopen($FTLlog,"r");
 }
 else
 {
-	$file = fopen("/var/log/pihole.log","r");
+    $logfile = uci_get("dhcp", "@dnsmasq[0]", "logfacility");
+	if(!isset($logfile))
+    	$logfile = "/var/log/pihole.log";
+
+	$file = fopen($logfile,"r");
 }
 
 if(!$file)
--- a/scripts/pi-hole/php/teleporter.php
+++ b/scripts/pi-hole/php/teleporter.php
@@ -362,8 +362,6 @@
 		$archive = new PharData($fullfilename);
 
 		$importedsomething = false;
-		$fullpiholerestart = false;
-		$reloadsettingspage = false;
 
 		$flushtables = isset($_POST["flushtables"]);
 
@@ -490,108 +488,15 @@
 				echo "Processed adlist group assignments (".$num.noun($num).")<br>\n";
 				$importedsomething = true;
 			}
-
-			if(isset($_POST["staticdhcpleases"]) && $file->getFilename() === "04-pihole-static-dhcp.conf")
-			{
-				if($flushtables) {
-					$local_file = @fopen("/etc/dnsmasq.d/04-pihole-static-dhcp.conf", "r+");
-					if ($local_file !== false) {
-						ftruncate($local_file, 0);
-						fclose($local_file);
-					}
-				}
-				$num = 0;
-				$staticdhcpleases = process_file(file_get_contents($file));
-				foreach($staticdhcpleases as $lease) {
-					list($mac,$ip,$hostname) = explode(",",$lease);
-					$mac = formatMAC($mac);
-					if(addStaticDHCPLease($mac,$ip,$hostname))
-						$num++;
-				}
-
-				readStaticLeasesFile();
-				echo "Processed static DHCP leases (".$num.noun($num).")<br>\n";
-				if($num > 0) {
-					$importedsomething = true;
-					$reloadsettingspage = true;
-				}
-			}
-
-			if(isset($_POST["localdnsrecords"]) && $file->getFilename() === "custom.list")
-			{
-				ob_start();
-				$reload="false";
-				if($flushtables) {
-					// Defined in func.php included via auth.php
-					// passing reload="false" will not restart Pi-hole
-					deleteAllCustomDNSEntries($reload);
-				}
-				$num = 0;
-				$localdnsrecords = process_file(file_get_contents($file));
-				foreach($localdnsrecords as $record) {
-					list($ip,$domain) = explode(" ",$record);
-					if(addCustomDNSEntry($ip, $domain, $reload, false))
-						$num++;
-				}
-				ob_end_clean();
-				echo "Processed local DNS records (".$num.noun($num).")<br>\n";
-				if($num > 0) {
-					// we need a full pihole restart
-					$fullpiholerestart = true;
-				}
-			}
-
-			if(isset($_POST["localcnamerecords"]) && $file->getFilename() === "05-pihole-custom-cname.conf")
-			{
-				ob_start();
-				$reload="false";
-				if($flushtables) {
-					// Defined in func.php included via auth.php
-					//passing reload="false" will not restart Pi-hole
-					deleteAllCustomCNAMEEntries($reload);
-				}
-
-				$num = 0;
-				$localcnamerecords = process_file(file_get_contents($file));
-				foreach($localcnamerecords as $record) {
-					$line = str_replace("cname=","", $record);
-					$line = str_replace("\r","", $line);
-					$line = str_replace("\n","", $line);
-					$explodedLine = explode (",", $line);
-
-					$domain = implode(",", array_slice($explodedLine, 0, -1));
-					$target = $explodedLine[count($explodedLine)-1];
-
-					if(addCustomCNAMEEntry($domain, $target, $reload, false))
-						$num++;
-				}
-				ob_end_clean();
-				echo "Processed local CNAME records (".$num.noun($num).")<br>\n";
-				if($num > 0) {
-					// we need a full pihole restart
-					$fullpiholerestart = true;
-				}
-			}
 		}
 
-		// do we need a full restart of Pi-hole or reloading the lists?
-		if($fullpiholerestart)
-		{
-			pihole_execute("restartdns");
-		} else {
-			if($importedsomething)
-			{
-				pihole_execute("restartdns reload");
-			}
+		if($importedsomething) {
+			send_signal_FTL(1);
 		}
 
 
 		unlink($fullfilename);
 		echo "OK";
-		if($reloadsettingspage)
-		{
-			echo "<br>\n<span data-forcereload></span>";
-		}
 	}
 	else
 	{
@@ -624,13 +529,6 @@
 	archive_add_table("adlist_by_group.json", "adlist_by_group");
 	archive_add_table("client_by_group.json", "client_by_group");
 
-	archive_add_file("/etc/pihole/","setupVars.conf");
-	archive_add_file("/etc/pihole/","dhcp.leases");
-	archive_add_file("/etc/pihole/","custom.list");
-	archive_add_file("/etc/pihole/","pihole-FTL.conf");
-	archive_add_file("/etc/","hosts","etc/");
-	archive_add_directory("/etc/dnsmasq.d/","dnsmasq.d/");
-
 	$archive->compress(Phar::GZ); // Creates a gziped copy
 	unlink($archive_file_name); // Unlink original tar file as it is not needed anymore
 	$archive_file_name .= ".gz"; // Append ".gz" extension to ".tar"
--- a/scripts/pi-hole/php/theme.php
+++ b/scripts/pi-hole/php/theme.php
@@ -21,10 +21,10 @@
 $available_themes["lcars"] = array("Star Trek LCARS theme (dark)", true, "lcars");
 
 
-$webtheme = "";
-// Try to load theme settings from setupVars.conf
-if(isset($setupVars['WEBTHEME']))
-    $webtheme = $setupVars['WEBTHEME'];
+$webtheme = uci_get("pihole", "@pihole[0]", "web_theme");
+if(!isset($webtheme)) {
+    $webtheme = "";
+}
 
 // May be overwritten by settings tab
 if(isset($_POST["field"]) &&
--- a/scripts/pi-hole/php/update_checker.php
+++ b/scripts/pi-hole/php/update_checker.php
@@ -1,98 +1,41 @@
 <?php
+$pihole = "/usr/lib/opkg/info/pihole.control";
+$pihole_FTL = "/usr/lib/opkg/info/pihole-FTL.control";
+$pihole_web = "/usr/lib/opkg/info/pihole-web.control";
+$core_current = "unknown";
+$FTL_current = "unknown";
+$web_current = "unknown";
 
-$localversions = "/etc/pihole/localversions";
-$localbranches = "/etc/pihole/localbranches";
-$GitHubVersions = "/etc/pihole/GitHubVersions";
-
-if(!is_readable($localversions) || !is_readable($localbranches) || !is_readable($GitHubVersions))
-{
-	$core_branch = "master";
-	$core_current = "N/A";
-	$core_update = false;
-	$web_branch = "master";
-	$web_current = "N/A";
-	$web_update = false;
-	$FTL_current = "N/A";
-	$FTL_update = false;
-}
-else
+if (file_exists($pihole))
 {
-	$versions = explode(" ", file_get_contents($localversions));
-	$branches = explode(" ", file_get_contents($localbranches));
-	$GitHubversions = explode(" ", file_get_contents($GitHubVersions));
-
-	/********** Get Pi-hole core branch / version / commit **********/
-	// Check if on a dev branch
-	$core_branch = $branches[0];
-	if($core_branch !== "master") {
-	    $core_current = "vDev";
-	    $core_commit = $versions[0];
-	}
-	else {
-	    $core_current = explode("-",$versions[0])[0];
-	}
-
-	/********** Get Pi-hole web branch / version / commit **********/
-	$web_branch = $branches[1];
-	if($web_branch !== "master") {
-	    $web_current = "vDev";
-	    $web_commit = $versions[1];
-	}
-	else {
-	    $web_current = explode("-",$versions[1])[0];
-	}
-
-	/********** Get Pi-hole FTL (not a git repository) **********/
-	$FTL_branch = $branches[2];
-	if(substr($versions[2], 0, 4) === "vDev") {
-	    $FTL_current = "vDev";
-	    $FTL_commit = $versions[2];
-	}
-	else {
-	    $FTL_current = $versions[2];
-	}
-
-	// Get data from GitHub
-	$core_latest = $GitHubversions[0];
-	$web_latest = $GitHubversions[1];
-	$FTL_latest = $GitHubversions[2];
-
-	// Core version comparison
-	if($core_current !== "vDev")
-	{
-		// This logic allows the local core version to be newer than the upstream version
-		// The update indicator is only shown if the upstream version is NEWER
-		$core_update = (version_compare($core_current, $core_latest) < 0);
-	}
-	else
-	{
-		$core_update = false;
+	foreach(file($pihole) as $line) {
+	    if(strpos($line, "Version") !== false) {
+	        list(, $core_current) = explode(":", $line);
+	        $core_current = trim($core_current);
+			$core_current = "v".strstr($core_current, '-', true);
+	    }
 	}
+}
 
-	// Web version comparison
-	if($web_current !== "vDev")
-	{
-		// This logic allows the local core version to be newer than the upstream version
-		// The update indicator is only shown if the upstream version is NEWER
-		$web_update = (version_compare($web_current, $web_latest) < 0);
-	}
-	else
-	{
-		$web_update = false;
+if (file_exists($pihole_FTL))
+{
+	foreach(file($pihole_FTL) as $line) {
+	    if(strpos($line, "Version") !== false) {
+	        list(, $FTL_current) = explode(":", $line);
+	        $FTL_current = trim($FTL_current);
+			$FTL_current = "v".strstr($FTL_current, '-', true);
+	    }
 	}
+}
 
-	// FTL version comparison
-	// This logic allows the local core version to be newer than the upstream version
-	// The update indicator is only shown if the upstream version is NEWER
-	if($FTL_current !== "vDev")
-	{
-		$FTL_update = (version_compare($FTL_current, $FTL_latest) < 0);
-	}
-	else
-	{
-		$FTL_update = false;
+if (file_exists($pihole_web))
+{
+	foreach(file($pihole_web) as $line) {
+	    if(strpos($line, "Version") !== false) {
+	        list(, $web_current) = explode(":", $line);
+	        $web_current = trim($web_current);
+			$web_current = "v".strstr($web_current, '-', true);
+	    }
 	}
-
 }
-
 ?>
--- a/settings.php
+++ b/settings.php
@@ -8,9 +8,6 @@
 require "scripts/pi-hole/php/header.php";
 require "scripts/pi-hole/php/savesettings.php";
 require_once "scripts/pi-hole/php/FTL.php";
-// Reread ini file as things might have been changed
-$setupVars = parse_ini_file("/etc/pihole/setupVars.conf");
-$piholeFTLConf = piholeFTLConfig(true);
 
 // Handling of PHP internal errors
 $last_error = error_get_last();
@@ -70,14 +67,8 @@
 <?php } ?>
 
 <?php
-if (isset($setupVars["PIHOLE_INTERFACE"])) {
-    $piHoleInterface = $setupVars["PIHOLE_INTERFACE"];
-} else {
-    $piHoleInterface = "unknown";
-}
-if (isset($setupVars["IPV4_ADDRESS"])) {
-    $piHoleIPv4 = $setupVars["IPV4_ADDRESS"];
-} else {
+$piHoleIPv4 = uci_get("network", $piHoleInterface, "ipaddr");
+if (!isset($piHoleIPv4)) {
     $piHoleIPv4 = "unknown";
 }
 
@@ -85,111 +76,103 @@
 $DNSservers = [];
 $DNSactive = [];
 
-$i = 1;
-while (isset($setupVars["PIHOLE_DNS_" . $i])) {
-    if (isinserverlist($setupVars["PIHOLE_DNS_" . $i])) {
-        array_push($DNSactive, $setupVars["PIHOLE_DNS_" . $i]);
-    } elseif (strpos($setupVars["PIHOLE_DNS_" . $i], ".") !== false) {
-        if (!isset($custom1)) {
-            $custom1 = $setupVars["PIHOLE_DNS_" . $i];
-        } else {
-            $custom2 = $setupVars["PIHOLE_DNS_" . $i];
-        }
-    } elseif (strpos($setupVars["PIHOLE_DNS_" . $i], ":") !== false) {
-        if (!isset($custom3)) {
-            $custom3 = $setupVars["PIHOLE_DNS_" . $i];
-        } else {
-            $custom4 = $setupVars["PIHOLE_DNS_" . $i];
-        }
-    }
-    $i++;
+$server = uci_get("dhcp", "@dnsmasq[0]", "server");
+$idxsvr = substr_count(file_get_contents("/etc/config/dhcp"), "list server") - 1;
+if (isset($server) && $idxsvr >= 0) {
+    $servers = explode(" ", $server);
+	for($i = 0; $i <= $idxsvr; $i++) {
+    	if (isset($servers[$i])) {
+	    	if (isinserverlist($servers[$i])) {
+	        	array_push($DNSactive, $servers[$i]);
+    		} elseif (strpos($servers[$i], ".") !== false) {
+		        if (!isset($custom1)) {
+		            $custom1 = $servers[$i];
+		        } else {
+		            $custom2 = $servers[$i];
+		        }
+		    } elseif (strpos($servers[$i], ":") !== false) {
+		        if (!isset($custom3)) {
+		            $custom3 = $servers[$i];
+		        } else {
+		            $custom4 = $servers[$i];
+		        }
+		    }
+		}
+	}
 }
 
-if (isset($setupVars["DNS_FQDN_REQUIRED"])) {
-    if ($setupVars["DNS_FQDN_REQUIRED"]) {
-        $DNSrequiresFQDN = true;
-    } else {
-        $DNSrequiresFQDN = false;
-    }
-} else {
+$DNSrequiresFQDN = uci_get("dhcp", "@dnsmasq[0]", "domainneeded");
+if (intval($DNSrequiresFQDN) !== 1) {
     $DNSrequiresFQDN = false;
+} else {
+    $DNSrequiresFQDN = true;
 }
 
-if (isset($setupVars["DNS_BOGUS_PRIV"])) {
-    if ($setupVars["DNS_BOGUS_PRIV"]) {
-        $DNSbogusPriv = true;
-    } else {
-        $DNSbogusPriv = false;
-    }
+$DNSbogusPriv = uci_get("dhcp", "@dnsmasq[0]", "boguspriv");
+if (intval($DNSbogusPriv) === 1 || !isset($DNSbogusPriv)) {
+    $DNSbogusPriv = true;
 } else {
     $DNSbogusPriv = false;
 }
 
-if (isset($setupVars["DNSSEC"])) {
-    if ($setupVars["DNSSEC"]) {
-        $DNSSEC = true;
-    } else {
-        $DNSSEC = false;
-    }
+$DNSSEC = uci_get("dhcp", "@dnsmasq[0]", "dnssec");
+if (intval($DNSSEC) === 1) {
+    $DNSSEC = true;
 } else {
     $DNSSEC = false;
 }
 
-if (isset($setupVars["DNSMASQ_LISTENING"])) {
-    if ($setupVars["DNSMASQ_LISTENING"] === "single") {
-        $DNSinterface = "single";
-    } elseif ($setupVars["DNSMASQ_LISTENING"] === "bind") {
-        $DNSinterface = "bind";
-    } elseif ($setupVars["DNSMASQ_LISTENING"] === "all") {
-        $DNSinterface = "all";
-    } else {
-        $DNSinterface = "local";
-    }
-} else {
-    $DNSinterface = "single";
+$localservice = uci_get("dhcp", "@dnsmasq[0]", "localservice");
+$iface = explode(" ", uci_get("dhcp", "@dnsmasq[0]", "interface"));
+$notinterface = explode(" ", uci_get("dhcp", "@dnsmasq[0]", "notinterface"));
+
+if (intval($localservice) === 1) {
+    $DNSinterface = "local";
+} elseif (in_array("nonexisting", $notinterface)) {
+    $DNSinterface = "all";
+} elseif (in_array($piHoleInterface, $iface)) {
+   $DNSinterface = "single";
 }
-if (isset($setupVars["REV_SERVER"]) && ($setupVars["REV_SERVER"] == 1)) {
+
+$rev_server_cidr = uci_get("dhcp", "@dnsmasq[0]", "cf_rev_server_cidr");
+$rev_server_target = uci_get("dhcp", "@dnsmasq[0]", "cf_rev_server_target");
+$revaddress = uci_get("dhcp", "@dnsmasq[0]", "cf_address");
+if (isset($rev_server_cidr) && isset($rev_server_target)) {
     $rev_server = true;
-    $rev_server_cidr   = $setupVars["REV_SERVER_CIDR"];
-    $rev_server_target = $setupVars["REV_SERVER_TARGET"];
-    $rev_server_domain = $setupVars["REV_SERVER_DOMAIN"];
 } else {
     $rev_server = false;
 }
+if (isset($revaddress)) {
+	$rev_server_domain = $revaddress;
+}
 ?>
 
 <?php
 // Query logging
-if (isset($setupVars["QUERY_LOGGING"])) {
-    if ($setupVars["QUERY_LOGGING"] == 1) {
-        $piHoleLogging = true;
-    } else {
-        $piHoleLogging = false;
-    }
-} else {
+$piHoleLogging = uci_get("dhcp", "@dnsmasq[0]", "logqueries");
+if (intval($piHoleLogging) === 1) {
     $piHoleLogging = true;
+} else {
+    $piHoleLogging = false;
 }
 ?>
 
 <?php
 // Excluded domains in API Query Log call
-if (isset($setupVars["API_EXCLUDE_DOMAINS"])) {
-    $excludedDomains = explode(",", $setupVars["API_EXCLUDE_DOMAINS"]);
-} else {
+$excludedDomains = explode(" ", uci_get("pihole", "@pihole[0]", "api_exclude_domains"));
+if (!isset($excludedDomains)) {
     $excludedDomains = [];
 }
 
 // Excluded clients in API Query Log call
-if (isset($setupVars["API_EXCLUDE_CLIENTS"])) {
-    $excludedClients = explode(",", $setupVars["API_EXCLUDE_CLIENTS"]);
-} else {
+$excludedClients = explode(" ", uci_get("pihole", "@pihole[0]", "api_exclude_clients"));
+if (!isset($excludedClients)) {
     $excludedClients = [];
 }
 
 // Excluded clients
-if (isset($setupVars["API_QUERY_LOG_SHOW"])) {
-    $queryLog = $setupVars["API_QUERY_LOG_SHOW"];
-} else {
+$queryLog = uci_get("pihole", "@pihole[0]", "api_query_log_show");
+if (!isset($queryLog)) {
     $queryLog = "all";
 }
 
@@ -242,16 +225,18 @@
                                                 function get_FTL_data($arg)
                                                 {
                                                     global $FTLpid;
-                                                    return trim(exec("ps -p " . $FTLpid . " -o " . $arg));
+                                                    if (file_exists('/usr/libexec/ps-procps-ng')) {
+                                                        return trim(exec("/usr/libexec/ps-procps-ng -p " . $FTLpid . " -o " . $arg));
+                                                    } else {
+                                                        echo "ps-procps-ng not installed";
+                                                    }
                                                 }
-
-                                                $FTLversion = exec("/usr/bin/pihole-FTL version");
                                             ?>
                                             <table class="table table-striped table-bordered nowrap">
                                                 <tbody>
                                                     <tr>
                                                         <th scope="row">FTL version:</th>
-                                                        <td><?php echo $FTLversion; ?></td>
+                                                        <td><?php echo $FTL_current; ?></td>
                                                     </tr>
                                                     <tr>
                                                         <th scope="row">Process identifier (PID):</th>
@@ -314,7 +299,7 @@
                             <div class="box box-warning">
                                 <div class="box-body">
                                     <div class="row">
-                                        <div class="col-md-4">
+                                        <div class="col-md-6">
                                             <?php if ($piHoleLogging) { ?>
                                                 <button type="button" class="btn btn-warning confirm-disablelogging-noflush btn-block">Disable query logging</button>
                                             <?php } else { ?>
@@ -327,26 +312,18 @@
                                             <?php } ?>
                                         </div>
                                         <p class="hidden-md hidden-lg"></p>
-                                        <div class="col-md-4">
+                                        <div class="col-md-6">
                                                 <button type="button" class="btn btn-warning confirm-flusharp btn-block">Flush network table</button>
                                         </div>
-                                        <p class="hidden-md hidden-lg"></p>
-                                        <div class="col-md-4">
-                                            <button type="button" class="btn btn-warning confirm-restartdns btn-block">Restart DNS resolver</button>
-                                        </div>
                                     </div>
                                     <br/>
                                     <div class="row">
-                                        <div class="col-md-4">
+                                        <div class="col-md-6">
                                             <button type="button" class="btn btn-danger confirm-flushlogs btn-block">Flush logs (last 24 hours)</button>
                                         </div>
                                         <p class="hidden-md hidden-lg"></p>
-                                        <div class="col-md-4">
-                                            <button type="button" class="btn btn-danger confirm-poweroff btn-block">Power off system</button>
-                                        </div>
-                                        <p class="hidden-md hidden-lg"></p>
-                                        <div class="col-md-4">
-                                            <button type="button" class="btn btn-danger confirm-reboot btn-block">Restart system</button>
+                                        <div class="col-md-6">
+                                            <button type="button" class="btn btn-warning confirm-restartdns btn-block">Restart DNS resolver</button>
                                         </div>
                                     </div>
 
@@ -363,14 +340,6 @@
                                         <input type="hidden" name="action" value="Disable-noflush">
                                         <input type="hidden" name="token" value="<?php echo $token ?>">
                                     </form>
-                                    <form role="form" method="post" id="poweroffform">
-                                        <input type="hidden" name="field" value="poweroff">
-                                        <input type="hidden" name="token" value="<?php echo $token ?>">
-                                    </form>
-                                    <form role="form" method="post" id="rebootform">
-                                        <input type="hidden" name="field" value="reboot">
-                                        <input type="hidden" name="token" value="<?php echo $token ?>">
-                                    </form>
                                     <form role="form" method="post" id="restartdnsform">
                                         <input type="hidden" name="field" value="restartdns">
                                         <input type="hidden" name="token" value="<?php echo $token ?>">
@@ -383,76 +352,79 @@
                 <!-- ######################################################### DHCP ######################################################### -->
                 <div id="piholedhcp" class="tab-pane fade<?php if($tab === "piholedhcp"){ ?> in active<?php } ?>">
                     <?php
-                    // Pi-hole DHCP server
-                    if (isset($setupVars["DHCP_ACTIVE"])) {
-                        if ($setupVars["DHCP_ACTIVE"] == 1) {
-                            $DHCP = true;
-                        } else {
+                    $DHCP = true;
+                    if (uci_get("dhcp", $piHoleInterface, "ignore") === "1" || uci_get("dhcp", "odhcpd", "maindhcp") === "1" ||
+                        uci_get("dhcp", $piHoleInterface, "dhcpv4") === "disabled") {
                             $DHCP = false;
-                        }
-                        // Read settings from config file
-                        if (isset($setupVars["DHCP_START"])) {
-                            $DHCPstart = $setupVars["DHCP_START"];
-                        } else {
+                    }
+
+                    $odhcpd = false;
+                    $DHCPv6 = false;
+                    $ra_flags = explode(" ", uci_get("dhcp", $piHoleInterface, "ra_flags"));
+                    if ((uci_get("dhcp", $piHoleInterface, "ra_management") === '2') ||
+                        (uci_get("dhcp", $piHoleInterface, "dhcpv6") === 'server' && in_array("managed-config", $ra_flags))) {
+                            if (file_exists('/usr/sbin/odhcpd')) {
+                                $odhcpd = true;
+                            }
+                            $DHCPv6 = true;
+                    }
+
+                    $DHCPip = 'unknown';
+                    if ($piHoleIPv4 !== "unknown" && validIP($piHoleIPv4)) {
+                        $DHCPdomain = explode(".", $piHoleIPv4);
+                        $DHCPip = $DHCPdomain[0] . "." . $DHCPdomain[1] . "." . $DHCPdomain[2] . ".";
+
+                        $DHCPstart = uci_get("dhcp", $piHoleInterface, "start");
+                        if (!isset($DHCPstart)) {
                             $DHCPstart = "";
                         }
-                        if (isset($setupVars["DHCP_END"])) {
-                            $DHCPend = $setupVars["DHCP_END"];
-                        } else {
-                            $DHCPend = "";
-                        }
-                        if (isset($setupVars["DHCP_ROUTER"])) {
-                            $DHCProuter = $setupVars["DHCP_ROUTER"];
-                        } else {
-                            $DHCProuter = "";
+                        $limit = uci_get("dhcp", $piHoleInterface, "limit");
+                        if (isset($limit)) {
+                            $DHCPend = $DHCPstart + $limit;
                         }
+                    }
 
-                        // This setting has been added later, we have to check if it exists
-                        if (isset($setupVars["DHCP_LEASETIME"])) {
-                            $DHCPleasetime = $setupVars["DHCP_LEASETIME"];
-                            if (strlen($DHCPleasetime) < 1) {
-                                // Fallback if empty string
-                                $DHCPleasetime = 24;
-                            }
-                        } else {
+                    $DHCPleasetime = uci_get("dhcp", $piHoleInterface, "leasetime");
+                    $DHCPleasetime = preg_replace("/[^0-9]/", "",$DHCPleasetime);
+                    if (isset($DHCPleasetime)) {
+                        if (strlen($DHCPleasetime) < 1) {
+                            // Fallback if empty string
                             $DHCPleasetime = 24;
                         }
-                        if (isset($setupVars["DHCP_IPv6"])) {
-                            $DHCPIPv6 = $setupVars["DHCP_IPv6"];
-                        } else {
-                            $DHCPIPv6 = false;
-                        }
-                        if (isset($setupVars["DHCP_rapid_commit"])) {
-                            $DHCP_rapid_commit = $setupVars["DHCP_rapid_commit"];
-                        } else {
-                            $DHCP_rapid_commit = false;
-                        }
-
                     } else {
-                        $DHCP = false;
-                        // Try to guess initial settings
-                        if ($piHoleIPv4 !== "unknown") {
-                            $DHCPdomain = explode(".", $piHoleIPv4);
-                            $DHCPstart = $DHCPdomain[0] . "." . $DHCPdomain[1] . "." . $DHCPdomain[2] . ".201";
-                            $DHCPend = $DHCPdomain[0] . "." . $DHCPdomain[1] . "." . $DHCPdomain[2] . ".251";
-                            $DHCProuter = $DHCPdomain[0] . "." . $DHCPdomain[1] . "." . $DHCPdomain[2] . ".1";
-                        } else {
-                            $DHCPstart = "";
-                            $DHCPend = "";
-                            $DHCProuter = "";
-                        }
                         $DHCPleasetime = 24;
-                        $DHCPIPv6 = false;
+                    }
+                    $DHCP_rapid_commit = uci_get("dhcp", "@dnsmasq[0]", "rapidcommit");
+                    if ($DHCP_rapid_commit != 1) {
                         $DHCP_rapid_commit = false;
+                    } else {
+                        $DHCP_rapid_commit = true;
+                    }
+                    $leasefile = uci_get("dhcp", "@dnsmasq[0]", "leasefile");;
+                    if (!isset($leasefile)) {
+                        $leasefile = "";
                     }
-                    if (isset($setupVars["PIHOLE_DOMAIN"])) {
-                        $piHoleDomain = $setupVars["PIHOLE_DOMAIN"];
+                    $DHCP_sequential = uci_get("dhcp", "@dnsmasq[0]", "sequential_ip");
+                    if ($DHCP_sequential != 1) {
+                        $DHCP_sequential = false;
                     } else {
+                        $DHCP_sequential = true;
+                    }
+
+                    $piHoleDomain = uci_get("dhcp", $piHoleInterface, "domain_iface");
+                    if (!isset($piHoleDomain)) {
                         $piHoleDomain = "lan";
                     }
                     ?>
                     <form role="form" method="post">
                         <div class="row">
+                            <?php if (!$DHCP) { ?>
+                            <div class="col-md-12">
+                                <div class="box box-danger">
+                                        <h4 style="text-align: center;color: red;"><p>DHCP is Disabled on <?php echo $piHoleIfname ?></p></h4>
+                                </div>
+                            </div>
+                            <?php } ?>
                             <!-- DHCP Settings Box -->
                             <div class="col-md-6">
                                 <div class="box box-warning">
@@ -462,8 +434,15 @@
                                     <div class="box-body">
                                         <div class="row">
                                             <div class="col-md-12">
-                                                <div><input type="checkbox" name="active" id="DHCPchk" <?php if ($DHCP){ ?>checked<?php } ?>><label for="DHCPchk"><strong>DHCP server enabled</strong></label></div><br>
-                                                <p id="dhcpnotice" lookatme-text="Make sure your router's DHCP server is disabled when using the Pi-hole DHCP server!" <?php if (!$DHCP){ ?>hidden<?php } ?>>Make sure your router's DHCP server is disabled when using the Pi-hole DHCP server!</p>
+                                                <label>Router (gateway) IP address</label>
+                                                <div class="form-group">
+                                                    <div class="input-group">
+                                                        <div class="input-group-addon">Router</div>
+                                                        <div data-placement="auto" title="Configure this value from Luci Web or Uci cli" data-toggle="tooltip">
+                                                            <input type="text" class="form-control DHCPgroup" name="router" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off" value="<?php echo $piHoleIPv4; ?>" disabled>
+                                                        </div>
+                                                    </div>
+                                                </div>
                                             </div>
                                         </div>
                                         <div class="row">
@@ -474,9 +453,9 @@
                                                 <div class="form-group">
                                                     <div class="input-group">
                                                         <div class="input-group-addon">From</div>
-                                                        <input type="text" class="form-control DHCPgroup" name="from" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
-                                                               value="<?php echo $DHCPstart; ?>"
-                                                               <?php if (!$DHCP){ ?>disabled<?php } ?>>
+                                                        <div class="input-group-addon"><?php echo $DHCPip; ?></div>
+                                                        <input required id="dhcpstart" type="number" min="<?php echo $DHCPdomain[3]; ?>" max="253" class="form-control DHCPgroup" name="from" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
+                                                               value="<?php echo $DHCPstart; ?>" <?php if (!$DHCP){ ?>disabled<?php } ?>>
                                                     </div>
                                                 </div>
                                             </div>
@@ -484,24 +463,26 @@
                                                 <div class="form-group">
                                                     <div class="input-group">
                                                         <div class="input-group-addon">To</div>
-                                                        <input type="text" class="form-control DHCPgroup" name="to" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
-                                                               value="<?php echo $DHCPend; ?>"
-                                                               <?php if (!$DHCP){ ?>disabled<?php } ?>>
+                                                        <div class="input-group-addon"><?php echo $DHCPip; ?></div>
+                                                        <input required id="dhcpend" type="number" max="254" class="form-control DHCPgroup" name="to" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
+                                                               value="<?php echo $DHCPend; ?>" <?php if (!$DHCP){ ?>disabled<?php } ?>>
                                                     </div>
                                                 </div>
                                             </div>
                                         </div>
                                         <div class="row">
                                             <div class="col-md-12">
-                                                <label>Router (gateway) IP address</label>
+                                                <label>DHCP lease time</label>
                                                 <div class="form-group">
                                                     <div class="input-group">
-                                                        <div class="input-group-addon">Router</div>
-                                                        <input type="text" class="form-control DHCPgroup" name="router" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
-                                                               value="<?php echo $DHCProuter; ?>"
-                                                               <?php if (!$DHCP){ ?>disabled<?php } ?>>
+                                                        <div class="input-group-addon">Lease time in hours</div>
+                                                        <input type="number" class="form-control DHCPgroup"
+                                                               name="leasetime"
+                                                               id="leasetime" value="<?php echo $DHCPleasetime; ?>"
+                                                               data-mask <?php if (!$DHCP){ ?>disabled<?php } ?>>
                                                     </div>
                                                 </div>
+                                                <p>*Hint: 24 = one day, 168 = one week, 744 = one month, 8760 = one year</p>
                                             </div>
                                         </div>
                                     </div>
@@ -521,31 +502,27 @@
                                                     <div class="input-group">
                                                         <div class="input-group-addon">Domain</div>
                                                         <input type="text" class="form-control DHCPgroup" name="domain"
-                                                               value="<?php echo $piHoleDomain; ?>"
-                                                               <?php if (!$DHCP){ ?>disabled<?php } ?>>
+                                                               value="<?php echo $piHoleDomain; ?>" <?php if (!$DHCP){ ?>disabled<?php } ?>>
                                                     </div>
                                                 </div>
                                             </div>
                                         </div>
                                         <div class="row">
                                             <div class="col-md-12">
-                                                <label>DHCP lease time</label>
+                                                <label>Leasefile Location</label>
                                                 <div class="form-group">
                                                     <div class="input-group">
-                                                        <div class="input-group-addon">Lease time in hours</div>
-                                                        <input type="number" class="form-control DHCPgroup"
-                                                               name="leasetime"
-                                                               id="leasetime" value="<?php echo $DHCPleasetime; ?>"
-                                                               data-mask <?php if (!$DHCP){ ?>disabled<?php } ?>>
+                                                        <div class="input-group-addon">Leasefile</div>
+                                                        <input type="text" class="form-control DHCPgroup" name="leasefile"
+                                                               value="<?php echo $leasefile; ?>" <?php if (!$DHCP){ ?>disabled<?php } ?>>
                                                     </div>
                                                 </div>
-                                                <p>Hint: 0 = infinite, 24 = one day, 168 = one week, 744 = one month, 8760 = one year</p>
                                             </div>
                                         </div>
                                         <div class="row">
                                             <div class="col-md-12">
                                               <div><input type="checkbox" name="DHCP_rapid_commit" id="DHCP_rapid_commit" class="DHCPgroup" <?php if ($DHCP_rapid_commit){ ?>checked<?php }; if (!$DHCP){ ?> disabled<?php } ?>>&nbsp;<label for="DHCP_rapid_commit"><strong>Enable DHCPv4 rapid commit (fast address assignment)</strong></label></div>
-                                              <div><input type="checkbox" name="useIPv6" id="useIPv6" class="DHCPgroup" <?php if ($DHCPIPv6){ ?>checked<?php }; if (!$DHCP){ ?> disabled<?php } ?>>&nbsp;<label for="useIPv6"><strong>Enable IPv6 support (SLAAC + RA)</strong></label></div>
+                                              <div><input type="checkbox" name="DHCP_sequential" id="DHCP_sequential" class="DHCPgroup" <?php if ($DHCP_sequential){ ?>checked<?php }?> <?php if (!$DHCP){ ?>disabled<?php } ?>>&nbsp;<label for="DHCP_sequential"><strong>Allocate IP Sequentially</strong> <i>(start from the lowest available address)</i></label></div>
                                             </div>
                                         </div>
                                     </div>
@@ -557,13 +534,9 @@
                         <div class="row">
                             <?php
                             $dhcp_leases = array();
-                            if ($DHCP) {
-                                // Read leases file
-                                $leasesfile = true;
-                                $dhcpleases = @fopen('/etc/pihole/dhcp.leases', 'r');
-                                if (!is_resource($dhcpleases))
-                                    $leasesfile = false;
+                            $dhcp6_leases = array();
 
+                            if ($DHCP) {
                                 function convertseconds($argument)
                                 {
                                     $seconds = round($argument);
@@ -578,37 +551,65 @@
                                     }
                                 }
 
-                                while (!feof($dhcpleases) && $leasesfile) {
-                                    $line = explode(" ", trim(fgets($dhcpleases)));
-                                    if (count($line) == 5) {
-                                        $counter = intval($line[0]);
-                                        if ($counter == 0) {
-                                            $time = "Infinite";
-                                        } elseif ($counter <= 315360000) // 10 years in seconds
-                                        {
-                                            $time = convertseconds($counter);
-                                        } else // Assume time stamp
-                                        {
-                                            $time = convertseconds($counter - time());
-                                        }
-
-                                        if (strpos($line[2], ':') !== false) {
-                                            // IPv6 address
-                                            $type = 6;
-                                        } else {
-                                            // IPv4 lease
-                                            $type = 4;
-                                        }
-
-                                        $host = htmlentities($line[3]);
-
-                                        $clid = $line[4];
-                                        if ($clid == "*") {
-                                            $clid = "<i>unknown</i>";
-                                        }
+                            	$ubus_leases = json_decode(shell_exec("ubus call luci-rpc getDHCPLeases 2>&1"), true);
+                            	$ubus_hosts = json_decode(shell_exec("ubus call luci-rpc getHostHints 2>&1"), true);
+
+                            	foreach($ubus_leases['dhcp_leases'] as $ubus_lease) {
+                                    $counter = $ubus_lease['expires'];
+                                    if (!$counter || intval($counter) > 5000000) {
+                                        $time = "Infinite";
+                                    } elseif (intval($counter) == 0) {
+                                        $time = "Expired";
+                                    } elseif (intval($counter) <= 315360000) {
+                                        $time = convertseconds(intval($counter));
+                                    } else {
+                                        $time = convertseconds(intval($counter) - time());
+                                    }
+
+                                    $hwaddr = $ubus_lease['macaddr'];
+                                    if (isset($ubus_hosts["$hwaddr"]['name'])) {
+                                    	$host = $ubus_hosts["$hwaddr"]['name'];
+                                    } else {
+                                        $host = "-";
+                                    }
+
+                                    if(isset($ubus_lease['duid']))
+                                    	$clid = $ubus_lease['duid'];
+                                    else
+                                        $clid = "<i>unknown</i>" ;
+
+                                    if (strpos($clid, ':') !== true)
+                                        $clid = wordwrap($clid, 2, ':', true);
+
+                                    array_push($dhcp_leases, ["TIME" => $time, "hwaddr" => $hwaddr, "IP" => $ubus_lease['ipaddr'], "host" => $host, "clid" => $clid]);
+                                }
+
+                            	foreach($ubus_leases['dhcp6_leases'] as $ubus_lease6) {
+                                    $counter = $ubus_lease6['expires'];
+                                    if (intval($counter) > 5000000) {
+                                        $time = "Infinite";
+                                    } elseif (intval($counter) == 0) {
+                                        $time = "Expired";
+                                    } elseif (intval($counter) <= 315360000) {
+                                        $time = convertseconds(intval($counter));
+                                    } else {
+                                        $time = convertseconds(intval($counter) - time());
+                                    }
+
+                                    $hwaddr = $ubus_lease6['macaddr'];
+                                    if (isset($ubus_hosts["$hwaddr"]['name'])) {
+                                    	$host = $ubus_hosts["$hwaddr"]['name'];
+                                    } else {
+                                        $host = "-";
+                                    }
 
-                                        array_push($dhcp_leases, ["TIME" => $time, "hwaddr" => strtoupper($line[1]), "IP" => $line[2], "host" => $host, "clid" => $clid, "type" => $type]);
+                                    if(isset($ubus_lease6['duid'])) {
+                                    	$clid = wordwrap($ubus_lease6['duid'], 2, ':', true);
+                                    } else {
+                                        $clid = "<i>unknown</i>" ;
                                     }
+
+                                    array_push($dhcp6_leases, ["TIME" => $time, "hwaddr" => $hwaddr, "IP" => $ubus_lease6['ip6addr'], "host" => $host, "clid" => $clid]);
                                 }
                             }
 
@@ -628,24 +629,74 @@
                                                             <th>MAC address</th>
                                                             <th>IP address</th>
                                                             <th>Hostname</th>
+                                                            <td>Lease time remaining</td>
                                                             <td></td>
                                                         </tr>
                                                     </thead>
                                                     <tbody>
                                                         <?php foreach ($dhcp_leases as $lease) { ?>
+                                                        <?php $add_static = true; foreach ($dhcp_static_leases as $static_lease) { if($static_lease['hwaddr'] === $lease["hwaddr"]) { $add_static = false; } } ?>
                                                         <tr data-placement="auto" data-container="body" data-toggle="tooltip"
-                                                            title="Lease type: IPv<?php echo $lease["type"]; ?><br/>Remaining lease time: <?php echo $lease["TIME"]; ?><br/>DHCP UID: <?php echo $lease["clid"]; ?>">
+                                                            title="Lease type: IPv4<br/>DHCP UID: <?php echo $lease["clid"]; ?>">
                                                             <td id="MAC"><?php echo $lease["hwaddr"]; ?></td>
                                                             <td id="IP" data-order="<?php echo bin2hex(inet_pton($lease["IP"])); ?>"><?php echo $lease["IP"]; ?></td>
                                                             <td id="HOST"><?php echo $lease["host"]; ?></td>
+                                                            <td id="TIME"><?php echo $lease["TIME"]; ?></td>
                                                             <td>
                                                                 <button type="button" class="btn btn-danger btn-xs" id="removedynamic">
                                                                     <span class="fas fas fa-trash-alt"></span>
                                                                 </button>
-                                                                <button type="button" id="button" class="btn btn-warning btn-xs" data-static="alert">
-                                                                    <span class="fas fas fa-file-import"></span>
+                                                        		<?php if($add_static) { ?>
+                                                            	<button type="button" id="button" class="btn btn-warning btn-xs" data-static="alert">
+                                                                	<span class="fas fas fa-file-import"></span>
+                                                            	</button>
+                                                        		<?php } ?>
+                                                            </td>
+                                                        </tr>
+                                                        <?php } ?>
+                                                    </tbody>
+                                                </table>
+                                            </div>
+                                        </div>
+                                    </div>
+                                </div>
+                            </div>
+                            <?php if ($DHCPv6) { ?>
+                            <div class="col-md-12">
+                                <div class="box box-warning">
+                                    <div class="box-header with-border">
+                                        <h3 class="box-title">Currently active DHCPv6 leases</h3> <i>(<?php echo ($odhcpd ? "odhcpd" : "dnsmasq") ?>)</i>
+                                    </div>
+                                    <div class="box-body">
+                                        <div class="row">
+                                            <div class="col-md-12">
+                                                <table id="DHCP6LeasesTable" class="table table-striped table-bordered nowrap" width="100%">
+                                                    <thead>
+                                                        <tr>
+                                                            <th>MAC address</th>
+                                                            <th>IP address</th>
+                                                            <th>Hostname</th>
+                                                            <td>Lease time remaining</td>
+                                                            <?php if (!$odhcpd){ ?>
+                                                            <td></td>
+                                                            <?php } ?>
+                                                        </tr>
+                                                    </thead>
+                                                    <tbody>
+                                                        <?php foreach ($dhcp6_leases as $lease) { ?>
+                                                        <tr data-placement="auto" data-container="body" data-toggle="tooltip"
+                                                            title="Lease type: IPv6<br/>DHCPv6 UID: <?php echo $lease["clid"]; ?>">
+                                                            <td id="MAC"><?php echo $lease["hwaddr"]; ?></td>
+                                                            <td id="IP" data-order="<?php echo bin2hex(inet_pton($lease["IP"])); ?>"><?php echo $lease["IP"]; ?></td>
+                                                            <td id="HOST"><?php echo $lease["host"]; ?></td>
+                                                            <td id="TIME"><?php echo $lease["TIME"]; ?></td>
+                                                            <?php if (!$odhcpd){ ?>
+                                                            <td>
+                                                                <button type="button" class="btn btn-danger btn-xs" id="removedynamic">
+                                                                    <span class="fas fas fa-trash-alt"></span>
                                                                 </button>
                                                             </td>
+                                                            <?php } ?>
                                                         </tr>
                                                         <?php } ?>
                                                     </tbody>
@@ -655,6 +706,7 @@
                                     </div>
                                 </div>
                             </div>
+                            <?php } ?>
                             <div class="col-md-12">
                                 <div class="box box-warning">
                                     <div class="box-header with-border">
@@ -669,18 +721,22 @@
                                                         <th>MAC address</th>
                                                         <th>IP address</th>
                                                         <th>Hostname</th>
+                                                        <th>IPv6-DUID</th>
+                                                        <th>IPv6-Suffix (hex)</th>
                                                         <td></td>
                                                     </tr>
                                                     </thead>
                                                     <tbody>
-                                                        <?php foreach ($dhcp_static_leases as $lease) { ?>
-                                                        <tr>
+                                                        <?php foreach ($dhcp_static_leases as $lease) { $rm_match = $lease["IP"]; if(strlen($lease["hwaddr"] > 0)) { $rm_match = $lease["hwaddr"]; } ?>
+                                                        <tr data-placement="auto" data-container="body" data-toggle="tooltip" title="<?php if (!$lease['enable']) { echo "Status: Disabled"; } ?>">
                                                             <td><?php echo $lease["hwaddr"]; ?></td>
                                                             <td data-order="<?php echo bin2hex(inet_pton($lease["IP"])); ?>"><?php echo $lease["IP"]; ?></td>
                                                             <td><?php echo htmlentities($lease["host"]); ?></td>
-                                                            <td><?php if (strlen($lease["hwaddr"]) > 0) { ?>
+                                                            <td><?php echo $lease["duid"]; ?></td>
+                                                            <td><?php echo $lease["hostid"]; ?></td>
+                                                            <td><?php if (strlen($rm_match) > 0) { ?>
                                                                 <button type="submit" class="btn btn-danger btn-xs" name="removestatic"
-                                                                        value="<?php echo $lease["hwaddr"]; ?>">
+                                                                        value="<?php echo $rm_match; ?>">
                                                                     <span class="far fa-trash-alt"></span>
                                                                 </button>
                                                                 <?php } ?>
@@ -690,9 +746,11 @@
                                                     </tbody>
                                                     <tfoot style="display: table-row-group">
                                                         <tr>
-                                                            <td><input type="text" class="form-group" name="AddMAC" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"></td>
-                                                            <td><input type="text" class="form-group" name="AddIP" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"></td>
-                                                            <td><input type="text" class="form-group" name="AddHostname" value="" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"></td>
+                                                            <td><input type="text" class="form-group" name="AddMAC" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off" placeholder="MAC Address"></td>
+                                                            <td><input type="text" class="form-group" name="AddIP" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off" placeholder="IP Address"></td>
+                                                            <td><input type="text" class="form-group" name="AddHostname" value="" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off" placeholder="Hostname"></td>
+                                                            <td><input type="text" class="form-group" name="AddDUID" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off" placeholder="DUID"></td>
+                                                            <td><input type="text" class="form-group" name="AddHostID" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off" placeholder="IPv6-Suffix (HEX)"></td>
                                                             <td>
                                                                 <button type="submit" class="btn btn-success btn-xs" name="addstatic">
                                                                     <span class="fas fa-plus"></span>
@@ -710,9 +768,11 @@
                                         </div>
                                     </div>
                                 </div>
+                                <?php if ($DHCP){ ?><input type="hidden" name="active" value=""><?php } ?>
                                 <input type="hidden" name="field" value="DHCP">
                                 <input type="hidden" name="token" value="<?php echo $token ?>">
                                 <button type="submit" class="btn btn-primary pull-right">Save</button>
+								<button type="submit" class="btn btn-primary pull-right" name="restartFTL" style="margin-right: 5px;">Save & Apply</button>
                             </div>
                         </div>
                     </form>
@@ -723,8 +783,9 @@
                     $rate_limit_count = 1000;
                     $rate_limit_interval = 60;
                     // Get rate limit from piholeFTL config array
-                    if (isset($piholeFTLConf["RATE_LIMIT"])) {
-                        $rl = explode("/", $piholeFTLConf["RATE_LIMIT"]);
+                	$rate_limit = uci_get("pihole", "@pihole[0]", "rate_limit");
+                    if (isset($rate_limit)) {
+                        $rl = explode("/", $rate_limit);
                         if(count($rl) == 2) {
                             $rate_limit_count = intval($rl[0]);
                             $rate_limit_interval = intval($rl[1]);
@@ -877,12 +938,7 @@
                                                         <div>
                                                             <input type="radio" name="DNSinterface" id="DNSinterface2" value="single"
                                                                     <?php if ($DNSinterface == "single"){ ?>checked<?php } ?>>
-                                                            <label for="DNSinterface2"><strong>Respond only on interface <?php echo htmlentities($piHoleInterface); ?></strong></label>
-                                                        </div>
-                                                        <div>
-                                                            <input type="radio" name="DNSinterface" id="DNSinterface3" value="bind"
-                                                                    <?php if ($DNSinterface == "bind"){ ?>checked<?php } ?>>
-                                                            <label for="DNSinterface3"><strong>Bind only to interface <?php echo htmlentities($piHoleInterface); ?></strong></label>
+                                                            <label for="DNSinterface2"><strong>Respond only on interface <?php echo htmlentities($piHoleInterface); if(isset($piHoleIfname)){ echo " (".htmlentities($piHoleIfname).")"; } ?></strong></label>
                                                         </div>
                                                         <div>
                                                             <input type="radio" name="DNSinterface" id="DNSinterface4" value="all"
@@ -1027,6 +1083,7 @@
                                 <input type="hidden" name="field" value="DNS">
                                 <input type="hidden" name="token" value="<?php echo $token ?>">
                                 <button type="submit" class="btn btn-primary pull-right">Save</button>
+								<button type="submit" class="btn btn-primary pull-right" name="restartFTL" style="margin-right: 5px;">Save & Apply</button>
                             </div>
                         </div>
                     </form>
@@ -1034,9 +1091,8 @@
                 <!-- ######################################################### API and Web ######################################################### -->
                 <?php
                 // Administrator email address
-                if (isset($setupVars["ADMIN_EMAIL"])) {
-                    $adminemail = $setupVars["ADMIN_EMAIL"];
-                } else {
+                $adminemail = uci_get("pihole", "@pihole[0]", "admin_email");
+                if (!isset($adminemail)) {
                     $adminemail = "";
                 }
                 ?>
@@ -1261,10 +1317,11 @@
                 <!-- ######################################################### Privacy (may be expanded further later on) ######################################################### -->
                 <?php
                 // Get privacy level from piholeFTL config array
-                if (isset($piholeFTLConf["PRIVACYLEVEL"])) {
-                    $privacylevel = intval($piholeFTLConf["PRIVACYLEVEL"]);
-                } else {
+                $privacylvl = uci_get("pihole", "@pihole[0]", "privacylevel");
+                if (!isset($privacylvl)) {
                     $privacylevel = 0;
+                } else {
+                    $privacylevel = intval($privacylvl);
                 }
                 ?>
                 <div id="privacy" class="tab-pane fade<?php if($tab === "privacy"){ ?> in active<?php } ?>">
@@ -1369,10 +1426,6 @@
                                                     <input type="checkbox" name="regexlist" id="tele_regexlist" value="true" checked>
                                                     <label for="tele_regexlist">Blacklist (regex/wildcard)</label>
                                                 </div>
-                                                <div>
-                                                    <input type="checkbox" name="adlist" id="tele_adlist" value="true" checked>
-                                                    <label for="tele_adlist">Adlists</label>
-                                                </div>
                                             </div>
                                             <div class="col-lg-6">
                                                 <div>
@@ -1388,16 +1441,8 @@
                                                     <label for="tele_auditlog">Audit log</label>
                                                 </div>
                                                 <div>
-                                                    <input type="checkbox" name="staticdhcpleases" id="tele_staticdhcpleases" value="true" checked>
-                                                    <label for="tele_staticdhcpleases">Static DHCP Leases</label>
-                                                </div>
-                                                <div>
-                                                    <input type="checkbox" name="localdnsrecords" id="tele_localdnsrecords" value="true" checked>
-                                                    <label for="tele_localdnsrecords">Local DNS Records</label>
-                                                </div>
-                                                <div>
-                                                    <input type="checkbox" name="localcnamerecords" id="tele_localcnamerecords" value="true" checked>
-                                                    <label for="tele_localcnamerecords">Local CNAME Records</label>
+                                                    <input type="checkbox" name="adlist" id="tele_adlist" value="true" checked>
+                                                    <label for="tele_adlist">Adlists</label>
                                                 </div>
                                             </div>
                                         </div>
--- a/taillog-FTL.php
+++ b/taillog-FTL.php
@@ -6,6 +6,14 @@
 *    This file is copyright under the latest version of the EUPL.
 *    Please see LICENSE file for your rights under this license. */
     require "scripts/pi-hole/php/header.php";
+    $FTLlog = uci_get("pihole", "@pihole[0]", "logfile");
+    if(!isset($FTLlog))
+        $FTLlog = "/var/log/pihole-FTL.log";
+
+    if(!file_exists($FTLlog)) {
+        echo $FTLlog." is not found!";
+        exit();
+    }
 ?>
 <!-- Title -->
 <div class="page-header">
--- a/taillog.php
+++ b/taillog.php
@@ -6,6 +6,11 @@
 *    This file is copyright under the latest version of the EUPL.
 *    Please see LICENSE file for your rights under this license. */
     require "scripts/pi-hole/php/header.php";
+    $logfile = uci_get("dhcp", "@dnsmasq[0]", "logfacility");
+    if(!isset($logfile)) {
+        echo "<h3>There is nothing to tails of, logfacility is not set!</h3>";
+        exit();
+    }
 ?>
 <!-- Title -->
 <div class="page-header">
